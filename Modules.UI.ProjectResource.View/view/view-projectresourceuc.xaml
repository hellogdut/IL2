<UserControl x:Class="Modules.UI.ProjectResource.View.ProjectResourceUC" 
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <UserControl.Resources>
    <DataTemplate x:Key="ItemDataTemplate">
      <Grid Height="Auto" Width="Auto">
        <TextBlock Name="textBlockName" VerticalAlignment="Center" Text="{Binding Name}" TextBlock.Foreground="{Binding CanvasBrush}" />
        <TextBox Name="textBoxRename" Visibility="Hidden" Foreground="#FFFFFFFF" Text="{Binding Name}" />
      </Grid>
    </DataTemplate>
    <SolidColorBrush x:Key="ControlBackgroundBrush" Color="#FF333333" />
  </UserControl.Resources>
  <ListBox Name="multiSelectTree" ItemTemplate="{StaticResource ItemDataTemplate}" Background="{DynamicResource ControlBackgroundBrush}" ItemsSource="{Binding TreeListBoxItems, Mode=OneWay}" ContextMenu="{Binding ObjectContextMenu}">
    <ListBox.ItemContainerStyle>
            <Style TargetType="{x:Type ListBoxItem}" ><!--x:ConnectionId="2"-->
                <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="Control.Background" Value="#00FFFFFF" />
        <Setter Property="ListBoxItem.IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ListBoxItem}">
              <Border Name="Bd" BorderThickness="0" CornerRadius="2" SnapsToDevicePixels="True">
                <Border.Style>
                  <Style TargetType="{x:Type Border}">
                    <Setter Property="Border.Background" Value="#00FFFFFF" />
                    <Style.Triggers>
                      <Trigger Property="UIElement.IsMouseOver" Value="True">
                        <Setter Property="Border.Background">
                          <Setter.Value>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                              <GradientStop Color="#FFFCFDFE" Offset="0" />
                              <GradientStop Color="#FFF2F7FE" Offset="1" />
                            </LinearGradientBrush>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Border.BorderBrush" Value="{StaticResource CheckboxBrush}" />
                      </Trigger>
                    </Style.Triggers>
                  </Style>
                </Border.Style>
                <Border Name="Bd2" BorderThickness="1" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True" Background="{x:Null}">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ToggleButton Name="Expander" IsChecked="{Binding IsSelected, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                      <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}">
                          <Setter Property="UIElement.Focusable" Value="False" />
                          <Setter Property="FrameworkElement.Width" Value="16" />
                          <Setter Property="FrameworkElement.Height" Value="16" />
                          <Setter Property="Control.Template">
                            <Setter.Value>
                              <ControlTemplate TargetType="{x:Type ToggleButton}">
                                <Border Background="#00FFFFFF" Height="16" Padding="5" Width="16">
                                  <Path Name="ExpandPath" Data="M0,0L0,6 6,0z" Fill="#FF989898" Stroke="#FF989898">
                                    <Path.RenderTransform>
                                      <RotateTransform Angle="135" CenterY="3" CenterX="3" />
                                    </Path.RenderTransform>
                                  </Path>
                                </Border>
                                <ControlTemplate.Triggers>
                                  <Trigger Property="UIElement.IsMouseOver" Value="True">
                                    <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF1BBBFA" />
                                    <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#00FFFFFF" />
                                  </Trigger>
                                  <Trigger Property="ToggleButton.IsChecked" Value="True">
                                    <Trigger.EnterActions>
                                      <BeginStoryboard>
                                        <Storyboard>
                                          <DoubleAnimation Duration="0:0:0.25" From="135" To="180" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath" />
                                        </Storyboard>
                                      </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                      <BeginStoryboard>
                                        <Storyboard>
                                          <DoubleAnimation Duration="0:0:0.25" From="180" To="135" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath" />
                                        </Storyboard>
                                      </BeginStoryboard>
                                    </Trigger.ExitActions>
                                  </Trigger>
                                </ControlTemplate.Triggers>
                              </ControlTemplate>
                            </Setter.Value>
                          </Setter>
                        </Style>
                      </ToggleButton.Style>
                    </ToggleButton>
                    <ContentPresenter ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Content="{TemplateBinding ContentControl.Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" />
                  </Grid>
                </Border>
              </Border>
              <ControlTemplate.Triggers>
                <!--<Trigger Property=" TreeListBoxItem.HasItems" Value="False">
                  <Setter TargetName="Expander" Property="UIElement.Visibility" Value="Hidden" />
                </Trigger>
                <Trigger Property="TreeListBoxItem.IsDropTarget" Value="True">
                  <Setter TargetName="Bd2" Property="Border.BorderBrush" Value="#FF1D9DFF" />
                </Trigger>-->
                  
                                 
                <Trigger Property="ListBoxItem.IsSelected" Value="True">
                  <Setter Property="Control.Foreground" Value="#FF000000" />
                  <Setter TargetName="Bd" Property="Border.Background">
                    <Setter.Value>
                      <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                        <GradientStop Color="#FFDCEBFC" Offset="0" />
                        <GradientStop Color="#FFC1DBFC" Offset="1" />
                      </LinearGradientBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter TargetName="Bd2" Value="{DynamicResource GlyphBrush}" Property="Border.Background" />
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                  <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                </Trigger>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                  <Setter TargetName="Bd" Property="Border.Background" Value="#FF595959" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    </ListBox.ItemContainerStyle>
  </ListBox>
</UserControl>