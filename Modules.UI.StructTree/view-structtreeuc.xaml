<UserControl x:Class="Modules.UI.StructTree.View.StructTreeUC" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mst="clr-namespace:Editor.ControlLib.MultiSelectTree;assembly=Editor.ControlLib">
  <UserControl.Resources>
    <Style x:Key="ToggleButtonStyleLock" TargetType="{x:Type ToggleButton}">
      <Setter Property="FrameworkElement.FocusVisualStyle">
        <Setter.Value>
          <Style>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate>
                  <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="#FF000000" StrokeThickness="1" StrokeDashArray="1 2" />
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </Setter.Value>
      </Setter>
      <Setter Property="Control.Background">
        <Setter.Value>
          <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFF3F3F3" Offset="0" />
            <GradientStop Color="#FFEBEBEB" Offset="0.5" />
            <GradientStop Color="#FFDDDDDD" Offset="0.5" />
            <GradientStop Color="#FFCDCDCD" Offset="1" />
          </LinearGradientBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Control.BorderBrush" Value="#FF707070" />
      <Setter Property="Control.BorderThickness" Value="1" />
      <Setter Property="Control.Foreground" Value="{DynamicResource TextBrush}" />
      <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
      <Setter Property="Control.VerticalContentAlignment" Value="Center" />
      <Setter Property="Control.Padding" Value="1" />
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ToggleButton}">
            <Grid Name="grid">
              <Border Name="Border" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{DynamicResource NormalBrush}" CornerRadius="3" Padding="{TemplateBinding Control.Padding}" />
              <Border Name="CheckedBorder" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{DynamicResource SelectedBackgroundBrush}" CornerRadius="3" Opacity="0" Padding="{TemplateBinding Control.Padding}" />
              <Border Name="HoverBorder" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{DynamicResource HoverBrush}" CornerRadius="3" Opacity="0" Padding="{TemplateBinding Control.Padding}" />
              <Border Name="HoverShineBorder" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{DynamicResource HoverShineBrush}" CornerRadius="3" Opacity="0" Padding="{TemplateBinding Control.Padding}" />
              <Border Name="Pressed" BorderBrush="{DynamicResource PressedBorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{DynamicResource PressedBrush}" CornerRadius="3" Opacity="0" Padding="{TemplateBinding Control.Padding}" />
              <Rectangle Name="Shine" Height="Auto" Margin="2" Opacity="1" RadiusY="3" RadiusX="3" VerticalAlignment="Stretch" Stroke="{x:Null}">
                <Rectangle.Fill>
                  <LinearGradientBrush EndPoint="0.5,0.971" StartPoint="0.5,0.042">
                    <GradientStop Color="#26FFFFFF" Offset="0" />
                    <GradientStop Color="#4CFFFFFF" Offset="1" />
                  </LinearGradientBrush>
                </Rectangle.Fill>
              </Rectangle>
              <ContentPresenter ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Content="{TemplateBinding ContentControl.Content}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" HorizontalAlignment="Center" Margin="4" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="UIElement.IsMouseOver" Value="True" />
              <Trigger Property="ButtonBase.IsPressed" Value="True" />
              <Trigger Property="UIElement.IsKeyboardFocused" Value="True" />
              <Trigger Property="ToggleButton.IsChecked" Value="True" />
              <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Control.Foreground" Value="#FFADADAD" />
                <Setter TargetName="Border" Value="{DynamicResource DisabledBackgroundBrush}" Property="Border.Background" />
                <Setter TargetName="Border" Value="{DynamicResource DisabledBorderBrush}" Property="Border.BorderBrush" />
                <Setter TargetName="grid" Property="UIElement.Opacity" Value="0.5" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <Trigger Property="ToggleButton.IsChecked" Value="True">
          <Setter Property="Control.Foreground">
            <Setter.Value>
              <SolidColorBrush Color="{DynamicResource BlackColor}" />
            </Setter.Value>
          </Setter>
        </Trigger>
      </Style.Triggers>
    </Style>
    <DataTemplate x:Key="ItemDataTemplate">
      <Grid Height="Auto">
        <TextBlock Text="{Binding DisplayName}" />
        <StackPanel Orientation="Horizontal" Background="{DynamicResource ControlBackgroundBrush}" HorizontalAlignment="Right">
          <ToggleButton Name="toggleButtonVisiable" Style="{StaticResource ToggleButtonStyleLock}" Width="18" Height="18" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{x:Null}" IsChecked="{Binding Visiable}" Tag="{Binding}">
            <Image Name="ImageVisiable" HorizontalAlignment="Stretch" Width="Auto" Source="/Modules.UI.StructTree;component/Image/Visiable.png" />
          </ToggleButton>
          <ToggleButton Name="toggleButtonLock" x:ConnectionId="2" Style="{StaticResource ToggleButtonStyleLock}" Width="18" Height="18" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{x:Null}" IsChecked="{Binding Path=CanEdit}" Tag="{Binding}">
            <Image Name="ImageLock" HorizontalAlignment="Stretch" Width="Auto" Source="/Modules.UI.StructTree;component/Image/Hidden.png" />
          </ToggleButton>
        </StackPanel>
      </Grid>
      <DataTemplate.Triggers>
        <Trigger SourceName="toggleButtonVisiable" Property="ToggleButton.IsChecked" Value="False">
          <Setter TargetName="ImageVisiable" Property="Image.Source" Value="/Modules.UI.StructTree;component/Image/Hidden.png" />
        </Trigger>
        <Trigger SourceName="toggleButtonLock" Property="ToggleButton.IsChecked" Value="False">
          <Setter TargetName="ImageLock" Property="Image.Source" Value="/Modules.UI.StructTree;component/Image/Lock.png" />
        </Trigger>
      </DataTemplate.Triggers>
    </DataTemplate>
  </UserControl.Resources>
  <mst:MultiSelectTree x:ConnectionId="3" Name="multiSelectTree" VirtualizingStackPanel.IsVirtualizing="False" ItemTemplate="{StaticResource ItemDataTemplate}" Background="{DynamicResource ControlBackgroundBrush}" TreeListBoxDragDropHelper.IsDragSource="True" TreeListBoxDragDropHelper.IsDropTarget="True" HierarchySource="{Binding RootVisualObject, Mode=OneWay}" ContextMenu="{Binding ObjectContextMenu}">
    <MultiSelectTree.Resources>
      <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="#FF444444" />
    </MultiSelectTree.Resources>
  </mst:MultiSelectTree>
</UserControl>