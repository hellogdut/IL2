<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <SolidColorBrush x:Key="OutsideFontColor" Color="#FF000000" />
  <SolidColorBrush x:Key="ButtonFontColor" Color="#FF042271" />
  <Color x:Key="Focus">#FF04CCFF</Color>
  <Color x:Key="HyperlinkFocus">#FF2B54BA</Color>
  <Color x:Key="Calendar">#FF0066CC</Color>
  <Color x:Key="PressStroke1">#FF1D415C</Color>
  <Color x:Key="PressStroke2">#FF2C628B</Color>
  <Color x:Key="TabStroke">#FF4F8BB9</Color>
  <Color x:Key="DataSortArrow">#3F2C628B</Color>
  <Color x:Key="DropLocate">#FF6392C8</Color>
  <Color x:Key="TreeviewArrowNorm">#FF76D5FD</Color>
  <Color x:Key="TreeviewArrowOver">#FFC1EFF8</Color>
  <Color x:Key="TreeviewArrowCheck">#FF6380EE</Color>
  <Color x:Key="ExpandArrowStroke">#FF688DC4</Color>
  <Color x:Key="Arrow">#FF425080</Color>
  <Color x:Key="Arrow2">#FF7682E4</Color>
  <Color x:Key="TextBkgSelection">#FF309AFF</Color>
  <Color x:Key="TextboxOver1">#FF5296BD</Color>
  <Color x:Key="TextboxOver2">#FFC2E4F6</Color>
  <Color x:Key="TextboxPress1">#FF3B79AC</Color>
  <Color x:Key="TextboxPress2">#FFB2DBED</Color>
  <Color x:Key="ItemOver1">#FFF4FAFD</Color>
  <Color x:Key="ItemOver2">#FFCFEDFD</Color>
  <Color x:Key="ItemOverStroke">#FFD8F0FA</Color>
  <Color x:Key="ItemSelectStroke">#FF98DDFB</Color>
  <Color x:Key="Over1">#FFE2F5FF</Color>
  <Color x:Key="Over2">#FFC0E7FC</Color>
  <Color x:Key="Over3">#FF9EDDFF</Color>
  <Color x:Key="Press1">#FF759FB6</Color>
  <Color x:Key="Press2">#FFB6E0F6</Color>
  <Color x:Key="Press3">#FF9DD5F4</Color>
  <Color x:Key="PressHighlight">#FF387599</Color>
  <Color x:Key="ButtonHighlightMid">#0095D9FF</Color>
  <Color x:Key="ButtonHighlightMid2">#9935A6E6</Color>
  <Color x:Key="ButtonHighlightMid3">#A535A6E6</Color>
  <Color x:Key="RadioIcon1">#FF90D5E5</Color>
  <Color x:Key="RadioIcon2">#FF28A2D1</Color>
  <Color x:Key="RadioIcon3">#FF1898D1</Color>
  <Color x:Key="RadioIcon4">#FF0F83C7</Color>
  <Color x:Key="RadioIconOver1">#FF1EBEFF</Color>
  <Color x:Key="RadioIconOver2">#FF13A2F3</Color>
  <Color x:Key="RadioIconPress1">#99759FB6</Color>
  <Color x:Key="RadioIconPress2">#FF4B8DAF</Color>
  <Color x:Key="RadioStroke">#FF275674</Color>
  <Color x:Key="CheckInnerOver">#FF79C6F9</Color>
  <Color x:Key="CheckInnerOver2">#FFAFDEFD</Color>
  <Color x:Key="CheckInnerPress">#FF5EB6F7</Color>
  <Color x:Key="CheckInnerPress2">#FF90CFFC</Color>
  <Color x:Key="CheckOutterOver">#FF5989A5</Color>
  <Color x:Key="CheckOutterOver2">#FFDEF9FA</Color>
  <Color x:Key="ThumbPress1">#FF6CBBE5</Color>
  <Color x:Key="ThumbPress2">#FF50A1CC</Color>
  <Color x:Key="ExpanderOver1">#FFB1E7FE</Color>
  <Color x:Key="ExpanderOver2">#FFEAFFFF</Color>
  <Color x:Key="ExpanderOver3">#A56EB4F6</Color>
  <Color x:Key="ExpanderMid">#009DD5F4</Color>
  <Color x:Key="ExpanderPress1">#FF80CEFF</Color>
  <Color x:Key="ExpanderPress2">#FF2D84CF</Color>
  <Color x:Key="ThumbDivetOver">#E5387599</Color>
  <Color x:Key="ThumbDivetFill1">#199DD5F4</Color>
  <Color x:Key="ThumbDivetFill2">#33387599</Color>
  <SolidColorBrush x:Key="btnFocus" Color="{StaticResource Focus}" />
  <SolidColorBrush x:Key="btnPressStroke1" Color="{StaticResource PressStroke1}" />
  <SolidColorBrush x:Key="btnPressStroke2" Color="{StaticResource PressStroke2}" />
  <LinearGradientBrush x:Key="btnPressBorder" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource PressStroke1}" Offset="0" />
    <GradientStop Color="{StaticResource PressStroke2}" Offset="1" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="hyperlinkPress" Color="{StaticResource HyperlinkFocus}" />
  <SolidColorBrush x:Key="calendarBtnFill" Color="{StaticResource Over2}" />
  <SolidColorBrush x:Key="calendarTodayStroke" Color="{StaticResource Calendar}" />
  <SolidColorBrush x:Key="treeviewArrowUnchecked" Color="{StaticResource TreeviewArrowNorm}" />
  <SolidColorBrush x:Key="treeviewArrowHover" Color="{StaticResource TreeviewArrowOver}" />
  <SolidColorBrush x:Key="treeviewArrowChecked" Color="{StaticResource TreeviewArrowCheck}" />
  <SolidColorBrush x:Key="TextBackgroundSelection" Color="{StaticResource TextBkgSelection}" />
  <SolidColorBrush x:Key="TextBoxOverBrush" Color="{StaticResource TextboxOver1}" />
  <SolidColorBrush x:Key="TextBoxPressBrush" Color="{StaticResource TextboxPress1}" />
  <LinearGradientBrush x:Key="TextBoxOver" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource TextboxOver1}" Offset="0" />
    <GradientStop Color="{StaticResource TextboxOver2}" Offset="0.355" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="TextBoxFocus" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource TextboxPress1}" Offset="0" />
    <GradientStop Color="{StaticResource TextboxPress2}" Offset="0.355" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="TextBoxNorm" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFABAEB3" Offset="0" />
    <GradientStop Color="#FFE2E8EE" Offset="0.355" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="grayGradient" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFFFFFFF" Offset="0" />
    <GradientStop Color="#FFEDEDED" Offset="0.171" />
    <GradientStop Color="#FFE7E7E7" Offset="0.5" />
    <GradientStop Color="#FFDCDCDC" Offset="0.51" />
    <GradientStop Color="#FFEAEBEC" Offset="1" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="hoverStroke" Color="{StaticResource ItemOverStroke}" />
  <SolidColorBrush x:Key="selectedStroke" Color="{StaticResource ItemSelectStroke}" />
  <LinearGradientBrush x:Key="hoverGradient" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource ItemOver1}" Offset="0.5" />
    <GradientStop Color="{StaticResource Over1}" Offset="0.5" />
    <GradientStop Color="{StaticResource ItemOver2}" Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="hoverGradientVertical" EndPoint="1,0.5" StartPoint="0,0.5">
    <GradientStop Color="{StaticResource ItemOver1}" Offset="0.5" />
    <GradientStop Color="{StaticResource Over1}" Offset="0.5" />
    <GradientStop Color="{StaticResource ItemOver2}" Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="BtnOverFill" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource Over1}" Offset="0.5" />
    <GradientStop Color="{StaticResource Over2}" Offset="0.509" />
    <GradientStop Color="{StaticResource Over3}" Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="BtnPressFill" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource Press1}" Offset="0" />
    <GradientStop Color="{StaticResource Press2}" Offset="0.152" />
    <GradientStop Color="{StaticResource Over2}" Offset="0.5" />
    <GradientStop Color="{StaticResource Press3}" Offset="0.509" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="btnOverFillHighlight" EndPoint="1,0.5" StartPoint="0,0.5">
    <GradientStop Color="{StaticResource ButtonHighlightMid2}" Offset="0" />
    <GradientStop Color="{StaticResource ButtonHighlightMid}" Offset="0.101" />
    <GradientStop Color="{StaticResource ButtonHighlightMid}" Offset="0.899" />
    <GradientStop Color="{StaticResource ButtonHighlightMid2}" Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="btnPressFillHighlight" EndPoint="1,0.5" StartPoint="0,0.5">
    <GradientStop Color="{StaticResource PressHighlight}" Offset="0" />
    <GradientStop Color="{StaticResource ButtonHighlightMid3}" Offset="0.037" />
    <GradientStop Color="{StaticResource ButtonHighlightMid}" Offset="0.143" />
    <GradientStop Color="{StaticResource ButtonHighlightMid}" Offset="0.857" />
    <GradientStop Color="{StaticResource ButtonHighlightMid3}" Offset="0.963" />
    <GradientStop Color="{StaticResource PressHighlight}" Offset="1" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="checkOverStroke" Color="{StaticResource CheckOutterOver}" />
  <SolidColorBrush x:Key="checkOverFill" Color="{StaticResource CheckOutterOver2}" />
  <SolidColorBrush x:Key="checkPressFill" Color="{StaticResource TextboxOver2}" />
  <SolidColorBrush x:Key="checkInnerOverFill" Color="{StaticResource CheckInnerOver2}" />
  <SolidColorBrush x:Key="checkInnerPressFill" Color="{StaticResource CheckInnerPress2}" />
  <SolidColorBrush x:Key="checkIconStroke" Color="{StaticResource Arrow}" />
  <SolidColorBrush x:Key="radioIconStroke" Color="{StaticResource RadioStroke}" />
  <LinearGradientBrush x:Key="radioIconFill" EndPoint="0.8,0.8" StartPoint="0.3,0.3">
    <GradientStop Color="{StaticResource RadioIcon1}" Offset="0" />
    <GradientStop Color="{StaticResource RadioIcon2}" Offset="0.179" />
    <GradientStop Color="{StaticResource RadioIcon3}" Offset="0.496" />
    <GradientStop Color="{StaticResource RadioIcon4}" Offset="0.812" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="radioIconFillOver" EndPoint="0.8,0.8" StartPoint="0.3,0.3">
    <GradientStop Color="{StaticResource Over2}" Offset="0" />
    <GradientStop Color="{StaticResource Focus}" Offset="0.179" />
    <GradientStop Color="{StaticResource RadioIconOver1}" Offset="0.496" />
    <GradientStop Color="{StaticResource RadioIconOver2}" Offset="0.812" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="radioIconFillPress" EndPoint="0.8,0.8" StartPoint="0.3,0.3">
    <GradientStop Color="{StaticResource RadioIconPress1}" Offset="0" />
    <GradientStop Color="{StaticResource RadioIconPress2}" Offset="0.317" />
    <GradientStop Color="{StaticResource PressHighlight}" Offset="0.504" />
    <GradientStop Color="{StaticResource PressStroke2}" Offset="0.817" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="checkInnerOverStroke" EndPoint="0.8,0.8" StartPoint="0.3,0.3">
    <GradientStop Color="{StaticResource CheckInnerOver}" Offset="0" />
    <GradientStop Color="{StaticResource ItemOver2}" Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="checkInnerPressStroke" EndPoint="0.8,0.8" StartPoint="0.3,0.3">
    <GradientStop Color="{StaticResource CheckInnerPress}" Offset="0" />
    <GradientStop Color="{StaticResource Over2}" Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ThumbOver" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFFFFFFF" Offset="0" />
    <GradientStop Color="{StaticResource Over1}" Offset="0.484" />
    <GradientStop Color="{StaticResource Over2}" Offset="0.493" />
    <GradientStop Color="{StaticResource Over3}" Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ThumbPress" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource ItemOver1}" Offset="0" />
    <GradientStop Color="{StaticResource Press3}" Offset="0.576" />
    <GradientStop Color="{StaticResource ThumbPress1}" Offset="0.581" />
    <GradientStop Color="{StaticResource ThumbPress2}" Offset="1" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="HeaderSeparator" Color="#FFD7D5D8" />
  <SolidColorBrush x:Key="GridBorder" Color="#FFD6D7D6" />
  <SolidColorBrush x:Key="dropLocator" Color="{StaticResource DropLocate}" />
  <LinearGradientBrush x:Key="sortArrow" EndPoint="0.725,0.832" StartPoint="0.275,0.168">
    <GradientStop Color="{StaticResource PressStroke2}" />
    <GradientStop Color="{StaticResource DataSortArrow}" Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ComboTogglePressHighlight" EndPoint="1,0.5" StartPoint="0,0.5">
    <GradientStop Color="{StaticResource PressHighlight}" Offset="0" />
    <GradientStop Color="{StaticResource ButtonHighlightMid3}" Offset="0.088" />
    <GradientStop Color="{StaticResource ButtonHighlightMid}" Offset="0.221" />
    <GradientStop Color="{StaticResource ButtonHighlightMid}" Offset="0.779" />
    <GradientStop Color="{StaticResource ButtonHighlightMid3}" Offset="0.912" />
    <GradientStop Color="{StaticResource PressHighlight}" Offset="1" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="expanderArrowStroke" Color="{StaticResource ExpandArrowStroke}" />
  <LinearGradientBrush x:Key="ExpanderArrowHoverFill1" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="{StaticResource ItemOver1}" Offset="0" />
    <GradientStop Color="{StaticResource ExpanderOver1}" Offset="0.52" />
    <GradientStop Color="{StaticResource Over3}" Offset="0.521" />
    <GradientStop Color="{StaticResource Over2}" Offset="0.78" />
    <GradientStop Color="{StaticResource ExpanderOver2}" Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ExpanderArrowHoverFill2" EndPoint="1,0" StartPoint="0,0">
    <GradientStop Color="{StaticResource ExpanderOver3}" Offset="0" />
    <GradientStop Color="{StaticResource ExpanderMid}" Offset="0.346" />
    <GradientStop Color="{StaticResource ExpanderMid}" Offset="0.696" />
    <GradientStop Color="{StaticResource ExpanderOver3}" Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ExpanderArrowHoverFill3" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#B9FFFFFF" Offset="0" />
    <GradientStop Color="#33FFFFFF" Offset="0.51" />
    <GradientStop Color="#00FFFFFF" Offset="0.52" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ExpanderArrowPressedFill1" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="{StaticResource ItemOver2}" Offset="0" />
    <GradientStop Color="{StaticResource ExpanderPress1}" Offset="0.52" />
    <GradientStop Color="{StaticResource CheckInnerOver}" Offset="0.521" />
    <GradientStop Color="{StaticResource TreeviewArrowOver}" Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ExpanderArrowPressedFill2" EndPoint="1,0" StartPoint="0,0">
    <GradientStop Color="{StaticResource ExpanderPress2}" Offset="0" />
    <GradientStop Color="{StaticResource ExpanderMid}" Offset="0.5" />
    <GradientStop Color="{StaticResource ExpanderPress2}" Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ExpanderArrowPressedFill3" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#A5FFFFFF" Offset="0" />
    <GradientStop Color="#26FFFFFF" Offset="0.506" />
    <GradientStop Color="#00FFFFFF" Offset="0.521" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="TabOverStroke" Color="{StaticResource TabStroke}" />
  <LinearGradientBrush x:Key="VTabOverGradient" EndPoint="1,0.5" StartPoint="0,0.5">
    <GradientStop Color="{StaticResource Over1}" Offset="0.5" />
    <GradientStop Color="{StaticResource Over2}" Offset="0.509" />
    <GradientStop Color="{StaticResource Over3}" Offset="1" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ScrollbarBkgNormStroke" Color="#FFA4A4A4" />
  <LinearGradientBrush x:Key="HScrollbarBkgNormFill" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFEFEFF0" Offset="0.5" />
    <GradientStop Color="#FFD5D6D8" Offset="0.513" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="HScrollbarBkgOverFill" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource Over1}" Offset="0.5" />
    <GradientStop Color="{StaticResource Over2}" Offset="0.513" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="HScrollbarBkgPressFill" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource Press2}" Offset="0.5" />
    <GradientStop Color="{StaticResource ThumbPress1}" Offset="0.513" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="VScrollbarBkgNormFill" EndPoint="1,0.5" StartPoint="0,0.5">
    <GradientStop Color="#FFEFEFF0" Offset="0.5" />
    <GradientStop Color="#FFD5D6D8" Offset="0.513" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="VScrollbarBkgOverFill" EndPoint="1,0.5" StartPoint="0,0.5">
    <GradientStop Color="{StaticResource Over1}" Offset="0.5" />
    <GradientStop Color="{StaticResource Over2}" Offset="0.513" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="VScrollbarBkgPressFill" EndPoint="1,0.5" StartPoint="0,0.5">
    <GradientStop Color="{StaticResource Press2}" Offset="0.5" />
    <GradientStop Color="{StaticResource ThumbPress1}" Offset="0.513" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="HThumbDivetNormFill" EndPoint="0.5,1" StartPoint="0.5,0.1">
    <GradientStop Color="#FF979797" Offset="0" />
    <GradientStop Color="#19979797" Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="HThumbDivetNormStroke" EndPoint="0.5,1" StartPoint="0.5,0.1">
    <GradientStop Color="#B2000000" Offset="0" />
    <GradientStop Color="#33000000" Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="HThumbDivetOverFill" EndPoint="0.5,1" StartPoint="0.5,0.1">
    <GradientStop Color="{StaticResource Press3}" Offset="0" />
    <GradientStop Color="{StaticResource ThumbDivetFill1}" Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="HThumbDivetOverStroke" EndPoint="0.5,1" StartPoint="0.5,0.1">
    <GradientStop Color="{StaticResource ThumbDivetOver}" Offset="0" />
    <GradientStop Color="{StaticResource ThumbDivetFill2}" Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="HThumbDivetPressFill" EndPoint="0.5,1" StartPoint="0.5,0.1">
    <GradientStop Color="{StaticResource RadioIconPress2}" Offset="0" />
    <GradientStop Color="{StaticResource ThumbDivetFill1}" Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="HThumbDivetPressStroke" EndPoint="0.5,1" StartPoint="0.5,0.1">
    <GradientStop Color="{StaticResource PressStroke1}" Offset="0" />
    <GradientStop Color="{StaticResource ThumbDivetFill2}" Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="VThumbDivetNormFill" EndPoint="1,0.5" StartPoint="0.1,0.5">
    <GradientStop Color="#FF979797" Offset="0" />
    <GradientStop Color="#19979797" Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="VThumbDivetNormStroke" EndPoint="1,0.5" StartPoint="0.1,0.5">
    <GradientStop Color="#B2000000" Offset="0" />
    <GradientStop Color="#33000000" Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="VThumbDivetOverFill" EndPoint="1,0.5" StartPoint="0.1,0.5">
    <GradientStop Color="{StaticResource Press3}" Offset="0" />
    <GradientStop Color="{StaticResource ThumbDivetFill1}" Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="VThumbDivetOverStroke" EndPoint="1,0.5" StartPoint="0.1,0.5">
    <GradientStop Color="{StaticResource ThumbDivetOver}" Offset="0" />
    <GradientStop Color="{StaticResource ThumbDivetFill2}" Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="VThumbDivetPressFill" EndPoint="1,0.5" StartPoint="0.1,0.5">
    <GradientStop Color="{StaticResource RadioIconPress2}" Offset="0" />
    <GradientStop Color="{StaticResource ThumbDivetFill1}" Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="VThumbDivetPressStroke" EndPoint="1,0.5" StartPoint="0.1,0.5">
    <GradientStop Color="{StaticResource PressStroke1}" Offset="0" />
    <GradientStop Color="{StaticResource ThumbDivetFill2}" Offset="1" />
  </LinearGradientBrush>
  <Color x:Key="BlackColor">#FF000000</Color>
  <Color x:Key="WhiteColor">#FFFFFFFF</Color>
  <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
  <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />
  <Style x:Key="NuclearButtonFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle Margin="2" Stroke="#60000000" StrokeThickness="1" StrokeDashArray="1 2" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}" BasedOn="{x:Null}">
    <Setter Property="Control.Foreground" Value="{StaticResource ButtonFontColor}" />
    <Setter Property="Control.Padding" Value="3" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
    <Setter Property="Control.Template" Value="{DynamicResource ButtonTemplate}" />
  </Style>
  <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type Button}">
    <ControlTemplate.Resources>
      <Storyboard x:Key="HoverOn">
        <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="Opacity" To="1" />
        <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver_Highlight" Storyboard.TargetProperty="Opacity" To="0.65" />
      </Storyboard>
      <Storyboard x:Key="HoverOff">
        <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="Opacity" To="0" />
        <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundOver_Highlight" Storyboard.TargetProperty="Opacity" To="0" />
      </Storyboard>
      <Storyboard x:Key="PressedOn">
        <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity" To="0.84" />
        <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgoundPressed_Highlight" Storyboard.TargetProperty="Opacity" To="0.65" />
      </Storyboard>
      <Storyboard x:Key="PressedOff">
        <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity" To="0" />
        <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgoundPressed_Highlight" Storyboard.TargetProperty="Opacity" To="0" />
      </Storyboard>
      <Storyboard x:Key="FocusedOn">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="FocusedOff">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
    </ControlTemplate.Resources>
    <Grid Name="Grid">
      <Border Name="BackgroundNorm" Background="{StaticResource grayGradient}" BorderThickness="1" BorderBrush="#FF8E8F8F" CornerRadius="3" />
      <Border Name="BackgroundNorm_highlight" Margin="1" BorderBrush="#F2FFFFFF" BorderThickness="1,0,1,1" CornerRadius="3" Opacity="0.65" />
      <Border Name="BackgroundOver" Background="{StaticResource BtnOverFill}" BorderBrush="{StaticResource TextBoxPressBrush}" BorderThickness="1" CornerRadius="3" Opacity="0" />
      <Border Name="BackgroundOver_Highlight" Margin="1" Background="{StaticResource btnOverFillHighlight}" BorderBrush="{StaticResource hoverStroke}" BorderThickness="1,0,1,1" CornerRadius="3" Opacity="0" />
      <Border Name="BackgroundPressed" Background="{StaticResource BtnPressFill}" BorderBrush="{StaticResource btnPressBorder}" BorderThickness="1" CornerRadius="3" Opacity="0" />
      <Border Name="BackgoundPressed_Highlight" Background="{StaticResource btnPressFillHighlight}" Margin="1" CornerRadius="2.5" Opacity="0" />
      <Border Name="Background_overlay" Margin="1,1,1,0" BorderThickness="1" CornerRadius="3,3,0,0">
        <Border.Background>
          <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#00FFFFFF" Offset="0" />
            <GradientStop Color="#72FFFFFF" Offset="0.157" />
            <GradientStop Color="#72FFFFFF" Offset="0.5" />
            <GradientStop Color="#00FFFFFF" Offset="0.51" />
          </LinearGradientBrush>
        </Border.Background>
      </Border>
      <Border Name="DisabledVisualElement" Background="#FFF1F1F1" BorderBrush="#FFB2B2B2" BorderThickness="1" CornerRadius="3" IsHitTestVisible="False" Visibility="Collapsed" />
      <ContentPresenter Name="contentPresenter" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" />
      <TextBlock Name="DisabledOverlay" Panel.ZIndex="1" Text="{TemplateBinding ContentControl.Content}" TextBlock.Foreground="#FF969696" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="{TemplateBinding Control.Padding}" Visibility="Collapsed" />
      <Border Name="FocusVisualElement" Margin="1" BorderBrush="{StaticResource btnFocus}" BorderThickness="1" CornerRadius="2" IsHitTestVisible="False" Opacity="0" />
      <Border Name="DefaultBorder" Margin="1" BorderBrush="{StaticResource btnFocus}" BorderThickness="1" CornerRadius="2" IsHitTestVisible="False" Opacity="0" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="Button.IsDefault" Value="True">
        <Setter TargetName="DefaultBorder" Property="UIElement.Opacity" Value="1" />
      </Trigger>
      <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
        <Trigger.ExitActions>
          <BeginStoryboard Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}" />
        </Trigger.ExitActions>
        <Trigger.EnterActions>
          <BeginStoryboard Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}" />
        </Trigger.EnterActions>
      </Trigger>
      <Trigger Property="UIElement.IsMouseOver" Value="True">
        <Trigger.ExitActions>
          <BeginStoryboard Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
        </Trigger.ExitActions>
        <Trigger.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
        </Trigger.EnterActions>
      </Trigger>
      <Trigger Property="ButtonBase.IsPressed" Value="True">
        <Trigger.ExitActions>
          <BeginStoryboard Storyboard="{StaticResource PressedOff}" />
        </Trigger.ExitActions>
        <Trigger.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource PressedOn}" />
        </Trigger.EnterActions>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="True" />
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground" />
        <Setter TargetName="DisabledVisualElement" Property="UIElement.Visibility" Value="Visible" />
        <Setter TargetName="DisabledOverlay" Property="UIElement.Visibility" Value="Visible" />
        <Setter TargetName="contentPresenter" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="RadioButtonFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle Margin="15,0,0,0" Stroke="#60000000" StrokeThickness="1" StrokeDashArray="1 2" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="CheckBoxFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle Margin="15,0,0,0" Stroke="#60000000" StrokeThickness="1" StrokeDashArray="1 2" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />
    <Setter Property="Control.Foreground" Value="{StaticResource OutsideFontColor}" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
    <Setter Property="Control.VerticalContentAlignment" Value="Top" />
    <Setter Property="Control.Padding" Value="4,1,0,0" />
    <Setter Property="Control.Template" Value="{DynamicResource CheckBoxTemplate}" />
  </Style>
  <ControlTemplate x:Key="CheckBoxTemplate" TargetType="{x:Type CheckBox}">
    <ControlTemplate.Resources>
      <Storyboard x:Key="HoverOn">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background_Over" Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BoxOver" Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="HoverOff">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background_Over" Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BoxOver" Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="PressedOn">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BoxPress" Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background_Press" Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="PressedOff">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background_Press" Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BoxPress" Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="CheckedOn">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.9" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="CheckedOff">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="IndeterminateOn">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.9" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="IndeterminateOff">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="FocusedOn">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="FocusedOff">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
    </ControlTemplate.Resources>
    <BulletDecorator Background="#00FFFFFF">
      <BulletDecorator.Bullet>
        <Grid>
          <Rectangle Name="Background" Margin="1" Width="13" Height="13" Fill="#FFF4F4F4" Stroke="#FF868686" StrokeThickness="1" />
          <Rectangle Name="Background_Over" Width="13" Height="13" Fill="{StaticResource checkOverFill}" Stroke="{StaticResource checkOverStroke}" StrokeThickness="1" Opacity="0" />
          <Rectangle Name="Background_Press" Width="13" Height="13" Fill="{StaticResource checkPressFill}" Stroke="{StaticResource btnPressStroke2}" StrokeThickness="1" Opacity="0" />
          <Rectangle Name="BoxFill" Width="9" Height="9" Fill="#FFCACFD5" StrokeThickness="1">
            <Rectangle.Stroke>
              <LinearGradientBrush EndPoint="0.8,0.8" StartPoint="0.3,0.3">
                <GradientStop Color="#FFB3B8BD" />
                <GradientStop Color="#FFE0E0E0" Offset="1" />
              </LinearGradientBrush>
            </Rectangle.Stroke>
          </Rectangle>
          <Rectangle Name="BoxOver" Margin="3" Width="9" Height="9" Fill="{StaticResource checkInnerOverFill}" Stroke="{StaticResource checkInnerOverStroke}" StrokeThickness="1" Opacity="0" />
          <Rectangle Name="BoxPress" Width="9" Height="9" Fill="{StaticResource checkInnerPressFill}" Stroke="{StaticResource checkInnerPressStroke}" StrokeThickness="1" Opacity="0" />
          <Rectangle Name="BoxGradient" Width="7" Height="7" StrokeThickness="1">
            <Rectangle.Fill>
              <LinearGradientBrush StartPoint="0.238,0.228" EndPoint="0.752,0.749">
                <GradientStop Color="#00F6F6F6" Offset="0.254" />
                <GradientStop Color="#53F8F8F8" Offset="0.54" />
                <GradientStop Color="#BFFFFFFF" Offset="0.996" />
              </LinearGradientBrush>
            </Rectangle.Fill>
          </Rectangle>
          <Rectangle Name="IndeterminateIcon" Width="5" Height="2" Fill="{StaticResource checkIconStroke}" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center" />
          <Path Name="CheckIcon" Margin="0,3.333,3.833,0" Width="7" Height="9" Fill="{StaticResource checkIconStroke}" Stretch="Fill" Opacity="0" VerticalAlignment="Top" HorizontalAlignment="Right" Data="M103.78572,598.96112L105.09846,597.5661 107.00806,600.16229C107.00806,600.16229 109.91004,592.74463 109.91004,592.74463 109.91004,592.74463 111.74678,593.79761 111.74678,593.79761 111.74678,593.79761 107.88566,602.75848 107.88566,602.75848L106.60118,602.75848z" />
          <Rectangle Name="FocusedVisualElement" Stroke="{StaticResource btnFocus}" StrokeThickness="1" Visibility="Visible" Opacity="0" />
          <Rectangle Name="DisabledVisualElement" Margin="1" Fill="#4CFFFFFF" Visibility="Collapsed" />
        </Grid>
      </BulletDecorator.Bullet>
      <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" RecognizesAccessKey="True" />
    </BulletDecorator>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsFocused" Value="True">
        <Trigger.ExitActions>
          <BeginStoryboard Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}" />
        </Trigger.ExitActions>
        <Trigger.EnterActions>
          <BeginStoryboard Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}" />
        </Trigger.EnterActions>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="ToggleButton.IsChecked" Value="True" />
          <Condition Property="ToggleButton.IsThreeState" Value="True" />
        </MultiTrigger.Conditions>
        <MultiTrigger.EnterActions>
          <BeginStoryboard Name="CheckedOn_BeginStoryboard" Storyboard="{StaticResource CheckedOn}" />
        </MultiTrigger.EnterActions>
        <MultiTrigger.ExitActions>
          <BeginStoryboard Name="CheckedOff_BeginStoryboard" Storyboard="{StaticResource CheckedOff}" />
        </MultiTrigger.ExitActions>
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Value="{x:Null}" Property="ToggleButton.IsChecked" />
          <Condition Property="ToggleButton.IsThreeState" Value="True" />
        </MultiTrigger.Conditions>
        <MultiTrigger.EnterActions>
          <BeginStoryboard Name="IndeterminateOn_BeginStoryboard" Storyboard="{StaticResource IndeterminateOn}" />
        </MultiTrigger.EnterActions>
        <MultiTrigger.ExitActions>
          <BeginStoryboard Name="IndeterminateOff_BeginStoryboard" Storyboard="{StaticResource IndeterminateOff}" />
        </MultiTrigger.ExitActions>
        <Setter TargetName="CheckIcon" Property="UIElement.Opacity" Value="0" />
        <Setter TargetName="CheckIcon" Property="UIElement.Visibility" Value="Collapsed" />
      </MultiTrigger>
      <Trigger Property="ToggleButton.IsChecked" Value="True">
        <Trigger.ExitActions>
          <BeginStoryboard Name="CheckedOn_BeginStoryboard1" Storyboard="{StaticResource CheckedOff}" />
        </Trigger.ExitActions>
        <Trigger.EnterActions>
          <BeginStoryboard Name="CheckedOff_BeginStoryboard1" Storyboard="{StaticResource CheckedOn}" />
        </Trigger.EnterActions>
      </Trigger>
      <Trigger Property="UIElement.IsMouseOver" Value="True">
        <Trigger.ExitActions>
          <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
        </Trigger.ExitActions>
        <Trigger.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
        </Trigger.EnterActions>
      </Trigger>
      <Trigger Property="ButtonBase.IsPressed" Value="True">
        <Trigger.ExitActions>
          <BeginStoryboard Storyboard="{StaticResource PressedOff}" />
        </Trigger.ExitActions>
        <Trigger.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource PressedOn}" />
        </Trigger.EnterActions>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground" />
        <Setter TargetName="DisabledVisualElement" Property="UIElement.Visibility" Value="Visible" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type RadioButton}" TargetType="{x:Type RadioButton}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{DynamicResource RadioButtonFocusVisual}" />
    <Setter Property="Control.Foreground" Value="{StaticResource OutsideFontColor}" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
    <Setter Property="Control.VerticalContentAlignment" Value="Top" />
    <Setter Property="Control.Padding" Value="4,1,0,0" />
    <Setter Property="Control.Template" Value="{DynamicResource RadioButtonTemplate}" />
  </Style>
  <ControlTemplate x:Key="RadioButtonTemplate" TargetType="{x:Type RadioButton}">
    <ControlTemplate.Resources>
      <Storyboard x:Key="HoverOn">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CircleOver" Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="HoverOff">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CircleOver" Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="PressedOn">
        <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundPress" Storyboard.TargetProperty="Opacity" To="1" />
        <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="CircleFillPress" Storyboard.TargetProperty="Opacity" To="1" />
        <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="CircleIconPress" Storyboard.TargetProperty="Opacity" To="1" />
      </Storyboard>
      <Storyboard x:Key="PressedOff">
        <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundPress" Storyboard.TargetProperty="Opacity" To="0" />
        <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="CircleFillPress" Storyboard.TargetProperty="Opacity" To="0" />
        <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="CircleIconPress" Storyboard.TargetProperty="Opacity" To="0" />
      </Storyboard>
      <Storyboard x:Key="CheckedOn">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CircleIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckIconOver" Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CircleIconPress" Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="CheckedOff">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CircleIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckIconOver" Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CircleIconPress" Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="FocusedOn">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="FocusedOff">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
    </ControlTemplate.Resources>
    <BulletDecorator Background="#00FFFFFF">
      <BulletDecorator.Bullet>
        <Grid>
          <Ellipse Name="Background" Width="14" Height="14" Fill="#FFF4F4F4" Stroke="#FF6F6F6F" StrokeThickness="1" />
          <Ellipse Name="BackgroundOver" Width="14" Height="14" Fill="{StaticResource checkOverFill}" Stroke="{StaticResource checkOverStroke}" StrokeThickness="1" Opacity="0" />
          <Ellipse Name="BackgroundPress" Width="14" Height="14" Fill="{StaticResource checkPressFill}" Stroke="{StaticResource btnPressStroke2}" StrokeThickness="1" Opacity="0" />
          <Ellipse Name="CircleFill" Margin="2" Fill="#FFCACFD5" StrokeThickness="1">
            <Ellipse.Stroke>
              <LinearGradientBrush EndPoint="0.8,0.8" StartPoint="0.3,0.3">
                <GradientStop Color="#FFB3B8BD" Offset="0" />
                <GradientStop Color="#FFE0E0E0" Offset="1" />
              </LinearGradientBrush>
            </Ellipse.Stroke>
          </Ellipse>
          <Ellipse Name="CircleOver" Margin="2" Fill="{StaticResource checkInnerOverFill}" Stroke="{StaticResource checkInnerOverStroke}" StrokeThickness="1" Opacity="0" />
          <Ellipse Name="CircleFillPress" Margin="2" Fill="{StaticResource checkInnerPressFill}" Stroke="{StaticResource checkInnerPressStroke}" StrokeThickness="1" Opacity="0" Visibility="Visible" />
          <Ellipse Name="CircleGradient" Margin="3" StrokeThickness="1">
            <Ellipse.Fill>
              <LinearGradientBrush EndPoint="0.8,0.8" StartPoint="0.3,0.3">
                <GradientStop Color="#00F6F6F6" Offset="0" />
                <GradientStop Color="#53F8F8F8" Offset="0.3" />
                <GradientStop Color="#BFFFFFFF" Offset="1" />
              </LinearGradientBrush>
            </Ellipse.Fill>
          </Ellipse>
          <Ellipse Name="CircleIcon" Margin="3" Fill="{StaticResource radioIconFill}" Stroke="{StaticResource radioIconStroke}" StrokeThickness="1.25" Opacity="0" />
          <Ellipse Name="CheckIconOver" Margin="3" Fill="{StaticResource radioIconFillOver}" Stroke="{StaticResource radioIconStroke}" StrokeThickness="1.25" Opacity="0" />
          <Ellipse Name="CircleIconPress" Margin="3" Fill="{StaticResource radioIconFillPress}" Stroke="{StaticResource radioIconStroke}" StrokeThickness="1.25" Opacity="0" />
          <Ellipse Name="DisabledVisualElement" Width="14" Height="14" Fill="#FFFFFFFF" Stroke="#FFFFFFFF" Opacity="0.35" Visibility="Collapsed" />
          <Ellipse Name="FocusedVisualElement" Margin="-1" Width="16" Height="16" Stroke="{StaticResource btnFocus}" StrokeThickness="1" IsHitTestVisible="False" Opacity="0" />
        </Grid>
      </BulletDecorator.Bullet>
      <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" RecognizesAccessKey="True" />
    </BulletDecorator>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsFocused" Value="True">
        <Trigger.ExitActions>
          <BeginStoryboard Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}" />
        </Trigger.ExitActions>
        <Trigger.EnterActions>
          <BeginStoryboard Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}" />
        </Trigger.EnterActions>
      </Trigger>
      <Trigger Property="ToggleButton.IsChecked" Value="false">
        <Trigger.ExitActions>
          <BeginStoryboard Name="CheckedOn_BeginStoryboard" Storyboard="{StaticResource CheckedOn}" />
        </Trigger.ExitActions>
        <Trigger.EnterActions>
          <BeginStoryboard Name="CheckedOff_BeginStoryboard" Storyboard="{StaticResource CheckedOff}" />
        </Trigger.EnterActions>
      </Trigger>
      <Trigger Property="UIElement.IsMouseOver" Value="True">
        <Trigger.ExitActions>
          <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
        </Trigger.ExitActions>
        <Trigger.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
        </Trigger.EnterActions>
      </Trigger>
      <Trigger Property="ButtonBase.IsPressed" Value="True">
        <Trigger.ExitActions>
          <BeginStoryboard Storyboard="{StaticResource PressedOff}" />
        </Trigger.ExitActions>
        <Trigger.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource PressedOn}" />
        </Trigger.EnterActions>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter Property="Control.Foreground" Value="#80000000" />
        <Setter TargetName="DisabledVisualElement" Property="UIElement.Visibility" Value="Visible" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="NuclearRepeatButton" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
            <Storyboard x:Key="PressedOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
            <Storyboard x:Key="PressedOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid>
            <Rectangle Name="Background" Fill="{StaticResource VScrollbarBkgNormFill}" Stroke="{StaticResource ScrollbarBkgNormStroke}" StrokeThickness="1" RadiusX="0.5" RadiusY="0.5" Opacity="0" />
            <Rectangle Name="BackgroundOver" Fill="{StaticResource VScrollbarBkgOverFill}" Stroke="{StaticResource TextBoxPressBrush}" StrokeThickness="1" RadiusX="0.5" RadiusY="0.5" Opacity="0" />
            <Rectangle Name="BackgroundPressed" Fill="{StaticResource VScrollbarBkgPressFill}" Stroke="{StaticResource btnPressStroke2}" StrokeThickness="1" RadiusX="0.5" RadiusY="0.5" Opacity="0" />
            <Rectangle Name="Highlight" Margin="1" Stroke="#99FFFFFF" StrokeThickness="1" RadiusX="0.5" RadiusY="0.5" Opacity="0" IsHitTestVisible="False" />
            <Rectangle Name="DisabledElement" Fill="#FFFFFFFF" Opacity="0" />
            <ContentPresenter Name="ContentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="True" />
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground" />
              <Setter TargetName="DisabledElement" Property="UIElement.Opacity" Value="0.7" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="NuclearThumbStyle" TargetType="{x:Type Thumb}" BasedOn="{x:Null}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BorderOver" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BorderOver1" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BorderOver2" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BorderOver" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BorderOver1" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BorderOver2" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
            <Storyboard x:Key="PressedOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BorderPress" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BorderPress1" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BorderPress2" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
            <Storyboard x:Key="PressedOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BorderPress" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BorderPress1" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BorderPress2" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid Name="Grid" Margin="0,0,0,0">
            <Rectangle Name="Background" Fill="{StaticResource VScrollbarBkgNormFill}" Stroke="{StaticResource ScrollbarBkgNormStroke}" RadiusX="1.5" RadiusY="1.5" />
            <Rectangle Name="BackgroundOver" Fill="{StaticResource VScrollbarBkgOverFill}" Stroke="{StaticResource TextBoxPressBrush}" RadiusX="1.5" RadiusY="1.5" Opacity="0" />
            <Rectangle Name="BackgroundPressed" Fill="{StaticResource VScrollbarBkgPressFill}" Stroke="{StaticResource btnPressStroke2}" RadiusX="1.5" RadiusY="1.5" Opacity="0" />
            <Rectangle Name="BorderHighlight" Width="11" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center">
              <Rectangle.Stroke>
                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                  <GradientStop Color="#00FFFFFF" Offset="0" />
                  <GradientStop Color="#59FFFFFF" Offset="1" />
                </LinearGradientBrush>
              </Rectangle.Stroke>
            </Rectangle>
            <Border Margin="0,0,0,6" Width="9" Height="2" Background="{StaticResource VThumbDivetNormFill}" BorderBrush="{StaticResource VThumbDivetNormStroke}" BorderThickness="1,1,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
            <Border Width="9" Height="2" Background="{StaticResource VThumbDivetNormFill}" BorderBrush="{StaticResource VThumbDivetNormStroke}" BorderThickness="1,1,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" />
            <Border Margin="0,0,0,-6" Width="9" Height="2" Background="{StaticResource VThumbDivetNormFill}" BorderBrush="{StaticResource VThumbDivetNormStroke}" BorderThickness="1,1,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" />
            <Border Name="BorderOver" Margin="0,0,0,6" Width="9" Height="2" Background="{StaticResource VThumbDivetOverFill}" BorderBrush="{StaticResource VThumbDivetOverStroke}" BorderThickness="1,1,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0" />
            <Border Name="BorderOver1" Width="9" Height="2" Background="{StaticResource VThumbDivetOverFill}" BorderBrush="{StaticResource VThumbDivetOverStroke}" BorderThickness="1,1,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0" />
            <Border Name="BorderOver2" Margin="0,0,0,-6" Width="9" Height="2" Background="{StaticResource VThumbDivetOverFill}" BorderBrush="{StaticResource VThumbDivetOverStroke}" BorderThickness="1,1,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0" />
            <Border Name="BorderPress" Margin="0,0,0,6" Width="9" Height="2" Background="{StaticResource VThumbDivetPressFill}" BorderBrush="{StaticResource VThumbDivetPressStroke}" BorderThickness="1,1,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0" />
            <Border Name="BorderPress1" Width="9" Height="2" Background="{StaticResource VThumbDivetPressFill}" BorderBrush="{StaticResource VThumbDivetPressStroke}" BorderThickness="1,1,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0" />
            <Border Name="BorderPress2" Margin="0,0,0,-6" Width="9" Height="2" Background="{StaticResource VThumbDivetPressFill}" BorderBrush="{StaticResource VThumbDivetPressStroke}" BorderThickness="1,1,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0" />
            <Rectangle Name="Highlight" Margin="1" Stroke="#FFFFFFFF" RadiusX="0.5" RadiusY="0.5" Opacity="0.6" IsHitTestVisible="False" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsFocused" Value="True" />
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Grid" Property="UIElement.Opacity" Value="0" />
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
              </Trigger.EnterActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="NuclearScrollRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
    <Setter Property="Control.IsTabStop" Value="False" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Grid>
            <Rectangle Fill="{TemplateBinding Control.Background}" Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="{TemplateBinding Control.BorderThickness}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollBar}">
          <Grid Name="GridRoot" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
            <Grid.RowDefinitions>
              <RowDefinition MaxHeight="18" />
              <RowDefinition Height="0.00001*" />
              <RowDefinition MaxHeight="18" />
            </Grid.RowDefinitions>
            <Rectangle Grid.RowSpan="5" RadiusX="0" RadiusY="0" StrokeThickness="1" Stroke="#FFF0F0F0" Fill="#FFEFEFEF" />
            <RepeatButton Name="DecreaseRepeat" Style="{DynamicResource NuclearRepeatButton}" Command="ScrollBar.LineUpCommand">
              <Grid>
                <Path Name="ArrowUp" Height="6" Width="10" Data="F1M541.537,173.589L531.107,173.589 536.322,167.49 541.537,173.589z" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform" IsHitTestVisible="False">
                  <Path.Fill>
                    <LinearGradientBrush EndPoint="0.7,0.75" StartPoint="0.25,0">
                      <GradientStop Color="#CC000000" Offset="0.25" />
                      <GradientStop Color="#7F000000" Offset="0.75" />
                      <GradientStop Color="#33000000" Offset="1" />
                    </LinearGradientBrush>
                  </Path.Fill>
                </Path>
              </Grid>
            </RepeatButton>
            <Track Name="PART_Track" Grid.Row="1" Orientation="Vertical" IsDirectionReversed="True">
              <Track.Thumb>
                <Thumb Style="{DynamicResource NuclearThumbStyle}" />
              </Track.Thumb>
              <Track.IncreaseRepeatButton>
                <RepeatButton Name="PageUp" Style="{DynamicResource NuclearScrollRepeatButtonStyle}" Command="ScrollBar.PageDownCommand" />
              </Track.IncreaseRepeatButton>
              <Track.DecreaseRepeatButton>
                <RepeatButton Name="PageDown" Style="{DynamicResource NuclearScrollRepeatButtonStyle}" Command="ScrollBar.PageUpCommand" />
              </Track.DecreaseRepeatButton>
            </Track>
            <RepeatButton Name="IncreaseRepeat" Grid.Row="2" Style="{DynamicResource NuclearRepeatButton}" Command="ScrollBar.LineDownCommand">
              <Grid>
                <Path Name="ArrowDown" Grid.Row="4" Height="6" Width="10" Data="F1M531.107,321.943L541.537,321.943 536.322,328.042 531.107,321.943z" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform" IsHitTestVisible="False">
                  <Path.Fill>
                    <LinearGradientBrush EndPoint="0.4,1" StartPoint="-0.3,0">
                      <GradientStop Color="#CC000000" Offset="0.25" />
                      <GradientStop Color="#7F000000" Offset="0.75" />
                      <GradientStop Color="#33000000" Offset="1" />
                    </LinearGradientBrush>
                  </Path.Fill>
                </Path>
              </Grid>
            </RepeatButton>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ScrollBar.Orientation" Value="Horizontal">
              <Setter TargetName="GridRoot" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform Angle="-90" />
                </Setter.Value>
              </Setter>
              <Setter TargetName="PART_Track" Property="Track.Orientation" Value="Vertical" />
              <Setter TargetName="DecreaseRepeat" Property="ButtonBase.Command" Value="ScrollBar.LineLeftCommand" />
              <Setter TargetName="IncreaseRepeat" Property="ButtonBase.Command" Value="ScrollBar.LineRightCommand" />
              <Setter TargetName="PageDown" Property="ButtonBase.Command" Value="ScrollBar.PageLeftCommand" />
              <Setter TargetName="PageUp" Property="ButtonBase.Command" Value="ScrollBar.PageRightCommand" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ScrollViewer}" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid Background="{TemplateBinding Control.Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ScrollContentPresenter Grid.Column="0" Grid.Row="0" Margin="{TemplateBinding Control.Padding}" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" />
            <ScrollBar Name="PART_HorizontalScrollBar" Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" Grid.Column="0" Grid.Row="1" Orientation="Horizontal" ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}" Minimum="0" Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" AutomationProperties.AutomationId="HorizontalScrollBar" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            <ScrollBar Name="PART_VerticalScrollBar" Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" Grid.Column="1" Grid.Row="0" Orientation="Vertical" ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}" Minimum="0" Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" AutomationProperties.AutomationId="VerticalScrollBar" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ListBox}" TargetType="{x:Type ListBox}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.BorderBrush" Value="{StaticResource btnPressStroke2}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Padding" Value="1" />
    <Setter Property="Control.Foreground" Value="{StaticResource OutsideFontColor}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBox}">
          <Grid>
            <Border BorderThickness="{TemplateBinding Control.BorderThickness}" Background="#FFFFFFFF" BorderBrush="{TemplateBinding Control.BorderBrush}" CornerRadius="2">
              <ScrollViewer Margin="1" Focusable="False" Background="{TemplateBinding Control.Background}">
                <StackPanel Margin="2" IsItemsHost="True" />
              </ScrollViewer>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False" />
            <Trigger Property="ItemsControl.IsGrouping" Value="True">
              <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ListBoxItem}" TargetType="{x:Type ListBoxItem}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Padding" Value="3" />
    <Setter Property="Control.Foreground" Value="{StaticResource OutsideFontColor}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientOver" Storyboard.TargetProperty="Opacity" To="0.73" />
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundGradientOver" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
            <Storyboard x:Key="SelectedOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientSelected" Storyboard.TargetProperty="Opacity" To="0.84" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientSelectedDisabled" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
            <Storyboard x:Key="SelectedOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundGradientSelected" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundGradientSelectedDisabled" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid SnapsToDevicePixels="True">
            <Rectangle Name="BackgroundGradientOver" Fill="{StaticResource hoverGradient}" Stroke="{StaticResource hoverStroke}" RadiusX="2" RadiusY="2" Opacity="0" />
            <Rectangle Name="BackgroundGradientSelectedDisabled" Fill="{StaticResource grayGradient}" Stroke="#7F8E8F8F" RadiusX="2" RadiusY="2" Opacity="0" />
            <Rectangle Name="BackgroundGradientSelected" Fill="{StaticResource BtnOverFill}" Stroke="{StaticResource selectedStroke}" RadiusX="2" RadiusY="2" Opacity="0" />
            <Rectangle Name="BackgroundHighlight" Margin="1" Stroke="#A0FFFFFF" RadiusX="1" RadiusY="1" />
            <ContentPresenter Name="contentPresenter" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ListBoxItem.IsSelected" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Name="SelectedOn_BeginStoryboard" Storyboard="{StaticResource SelectedOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground" />
              <Setter TargetName="BackgroundGradientSelected" Property="UIElement.Visibility" Value="Hidden" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderHeaderFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle SnapsToDevicePixels="True" Margin="0" Stroke="#FF000000" StrokeDashArray="1 2" StrokeThickness="1" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="circleOver1" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="circleOver2" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="circleOver3" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="circleOver1" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="circleOver2" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="circleOver3" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
            <Storyboard x:Key="PressedOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="circlePress1" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="circlePress2" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="circlePress3" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="HoverBackground1" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
            <Storyboard x:Key="PressedOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="circlePress1" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="circlePress2" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="circlePress3" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="HoverBackground1" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
            <Storyboard x:Key="CheckedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.1000000" Duration="00:00:00.0010000" Storyboard.TargetName="arrowDown" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="-1" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.1000000" Duration="00:00:00.0010000" Storyboard.TargetName="HoverBackground2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="-1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="CheckedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.4000000" Duration="00:00:00.0010000" Storyboard.TargetName="arrowDown" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.4000000" Duration="00:00:00.0010000" Storyboard.TargetName="HoverBackground2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusBackground" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.84" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusBackground" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid>
            <Rectangle Name="HoverBackground" Fill="{StaticResource hoverGradient}" Stroke="{StaticResource hoverStroke}" RadiusX="2" RadiusY="2" Opacity="0" RenderTransformOrigin="0.5,0.5">
              <Rectangle.RenderTransform>
                <TransformGroup>
                  <ScaleTransform />
                  <SkewTransform />
                  <RotateTransform />
                  <TranslateTransform />
                </TransformGroup>
              </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Name="HoverBackground1" Fill="{StaticResource hoverGradient}" Stroke="{StaticResource hoverStroke}" RadiusX="2" RadiusY="2" Opacity="0" RenderTransformOrigin="0.5,0.5">
              <Rectangle.RenderTransform>
                <TransformGroup>
                  <ScaleTransform />
                  <SkewTransform />
                  <RotateTransform />
                  <TranslateTransform />
                </TransformGroup>
              </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Name="HoverBackground2" Fill="{StaticResource hoverGradient}" Stroke="{StaticResource hoverStroke}" RadiusX="2" RadiusY="2" Opacity="0" RenderTransformOrigin="0.5,0.5">
              <Rectangle.RenderTransform>
                <TransformGroup>
                  <ScaleTransform />
                  <SkewTransform />
                  <RotateTransform />
                  <TranslateTransform />
                </TransformGroup>
              </Rectangle.RenderTransform>
            </Rectangle>
            <Grid Margin="{TemplateBinding Control.Padding}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="18" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Grid Height="18" HorizontalAlignment="Left" VerticalAlignment="Top">
                <Ellipse Name="circleOver1" Height="18" Width="18" Fill="{StaticResource ExpanderArrowHoverFill1}" Stroke="#00000000" Opacity="0" />
                <Ellipse Name="circleOver2" Height="18" Width="18" Fill="{StaticResource ExpanderArrowHoverFill2}" Stroke="#00000000" Opacity="0" />
                <Ellipse Name="circleOver3" Height="18" Width="18" Fill="{StaticResource ExpanderArrowHoverFill3}" Stroke="{StaticResource expanderArrowStroke}" Opacity="0" />
                <Ellipse Name="circlePress1" Height="18" Width="18" Fill="{StaticResource ExpanderArrowPressedFill1}" Stroke="#00000000" Opacity="0" />
                <Ellipse Name="circlePress2" Height="18" Width="18" Fill="{StaticResource ExpanderArrowPressedFill2}" Stroke="#00000000" Opacity="0" />
                <Ellipse Name="circlePress3" Height="18" Width="18" Fill="{StaticResource ExpanderArrowPressedFill3}" Stroke="{StaticResource expanderArrowStroke}" Opacity="0" />
                <Path Name="arrowDown" Stroke="{StaticResource ButtonFontColor}" StrokeThickness="2" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                  <Path.RenderTransform>
                    <TransformGroup>
                      <ScaleTransform />
                      <SkewTransform />
                      <RotateTransform />
                      <TranslateTransform />
                    </TransformGroup>
                  </Path.RenderTransform>
                </Path>
              </Grid>
              <ContentPresenter Name="header" Margin="4,0,0,0" Grid.Column="1" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" HorizontalAlignment="Left" VerticalAlignment="Center" IsHitTestVisible="False" />
            </Grid>
            <Rectangle Name="FocusBackground" Stroke="{StaticResource selectedStroke}" RadiusX="2" RadiusY="2" IsHitTestVisible="False" Opacity="0" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsFocused" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard Name="CheckedOff_BeginStoryboard" Storyboard="{StaticResource CheckedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Name="CheckedOn_BeginStoryboard" Storyboard="{StaticResource CheckedOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
              </Trigger.EnterActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="circleOver1" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="circleOver2" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="circleOver3" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="circleOver1" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="circleOver2" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="circleOver3" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
            <Storyboard x:Key="PressedOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="circlePress1" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="circlePress2" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="circlePress3" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="HoverBackground1" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
            <Storyboard x:Key="PressedOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="circlePress1" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="circlePress2" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="circlePress3" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="HoverBackground1" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
            <Storyboard x:Key="CheckedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.1000000" Storyboard.TargetName="arrowRight" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="90" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.1000000" Storyboard.TargetName="HoverBackground2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="-1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="CheckedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.4000000" Storyboard.TargetName="arrowRight" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="-90" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.4000000" Storyboard.TargetName="HoverBackground2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusBackground" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.84" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusBackground" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid>
            <Rectangle Name="HoverBackground" Fill="{StaticResource hoverGradientVertical}" Stroke="{StaticResource hoverStroke}" RadiusX="2" RadiusY="2" Opacity="0" RenderTransformOrigin="0.5,0.5">
              <Rectangle.RenderTransform>
                <TransformGroup>
                  <ScaleTransform />
                  <SkewTransform />
                  <RotateTransform />
                  <TranslateTransform />
                </TransformGroup>
              </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Name="HoverBackground1" Fill="{StaticResource hoverGradientVertical}" Stroke="{StaticResource hoverStroke}" RadiusX="2" RadiusY="2" Opacity="0" RenderTransformOrigin="0.5,0.5">
              <Rectangle.RenderTransform>
                <TransformGroup>
                  <ScaleTransform />
                  <SkewTransform />
                  <RotateTransform />
                  <TranslateTransform />
                </TransformGroup>
              </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Name="HoverBackground2" Fill="{StaticResource hoverGradientVertical}" Stroke="{StaticResource hoverStroke}" RadiusX="2" RadiusY="2" Opacity="0" RenderTransformOrigin="0.5,0.5">
              <Rectangle.RenderTransform>
                <TransformGroup>
                  <ScaleTransform />
                  <SkewTransform />
                  <RotateTransform />
                  <TranslateTransform />
                </TransformGroup>
              </Rectangle.RenderTransform>
            </Rectangle>
            <Grid SnapsToDevicePixels="False" Background="#00FFFFFF">
              <Grid.RowDefinitions>
                <RowDefinition Height="18" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <Grid>
                <Grid.LayoutTransform>
                  <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1" />
                    <SkewTransform AngleX="0" AngleY="0" />
                    <RotateTransform Angle="0" />
                    <TranslateTransform X="0" Y="0" />
                  </TransformGroup>
                </Grid.LayoutTransform>
                <Ellipse Name="circleOver1" Width="18" Height="18" Fill="{StaticResource ExpanderArrowHoverFill1}" Stroke="#00000000" Opacity="0" />
                <Ellipse Name="circleOver2" Width="18" Height="18" Fill="{StaticResource ExpanderArrowHoverFill2}" Stroke="#00000000" Opacity="0" />
                <Ellipse Name="circleOver3" Width="18" Height="18" Fill="{StaticResource ExpanderArrowHoverFill3}" Stroke="{StaticResource expanderArrowStroke}" Opacity="0" />
                <Ellipse Name="circlePress1" Width="18" Height="18" Fill="{StaticResource ExpanderArrowPressedFill1}" Stroke="#00000000" Opacity="0" />
                <Ellipse Name="circlePress2" Width="18" Height="18" Fill="{StaticResource ExpanderArrowPressedFill2}" Stroke="#00000000" Opacity="0" />
                <Ellipse Name="circlePress3" Width="18" Height="18" Fill="{StaticResource ExpanderArrowPressedFill3}" Stroke="{StaticResource expanderArrowStroke}" Opacity="0" />
                <Path Name="arrowRight" Stroke="{StaticResource ButtonFontColor}" StrokeThickness="2" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                  <Path.RenderTransform>
                    <TransformGroup>
                      <ScaleTransform />
                      <SkewTransform />
                      <RotateTransform Angle="-90" />
                    </TransformGroup>
                  </Path.RenderTransform>
                </Path>
              </Grid>
              <ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Center" Margin="6,4,6,0" VerticalAlignment="Top" Grid.Row="1" RecognizesAccessKey="True">
                <ContentPresenter.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform Angle="-90" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </ContentPresenter.LayoutTransform>
              </ContentPresenter>
              <Rectangle Name="FocusBackground" Stroke="{StaticResource selectedStroke}" RadiusX="2" RadiusY="2" IsHitTestVisible="False" Opacity="0" Grid.RowSpan="2" />
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsFocused" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource FocusedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource FocusedOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard Name="CheckedOff_BeginStoryboard" Storyboard="{StaticResource CheckedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Name="CheckedOn_BeginStoryboard" Storyboard="{StaticResource CheckedOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Name="HoverOn_BeginStoryboard" Storyboard="{StaticResource HoverOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
              </Trigger.EnterActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="circleOver1" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="circleOver2" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="circleOver3" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="circleOver1" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="circleOver2" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="circleOver3" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
            <Storyboard x:Key="PressedOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="circlePress1" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="circlePress2" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="circlePress3" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="HoverBackground1" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
            <Storyboard x:Key="PressedOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="circlePress1" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="circlePress2" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="circlePress3" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="HoverBackground1" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
            <Storyboard x:Key="CheckedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="arrowUp" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="-1" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HoverBackground2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="CheckedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="arrowUp" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HoverBackground2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusBackground" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.84" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusBackground" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid>
            <Rectangle Name="HoverBackground" Fill="{StaticResource hoverGradient}" Stroke="{StaticResource hoverStroke}" RadiusX="2" RadiusY="2" Opacity="0" RenderTransformOrigin="0.5,0.5">
              <Rectangle.RenderTransform>
                <TransformGroup>
                  <ScaleTransform ScaleY="-1" />
                  <SkewTransform />
                  <RotateTransform />
                  <TranslateTransform />
                </TransformGroup>
              </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Name="HoverBackground1" Fill="{StaticResource hoverGradient}" Stroke="{StaticResource hoverStroke}" RadiusX="2" RadiusY="2" Opacity="0" RenderTransformOrigin="0.5,0.5">
              <Rectangle.RenderTransform>
                <TransformGroup>
                  <ScaleTransform ScaleY="-1" />
                  <SkewTransform />
                  <RotateTransform />
                  <TranslateTransform />
                </TransformGroup>
              </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Name="HoverBackground2" Fill="{StaticResource hoverGradient}" Stroke="{StaticResource hoverStroke}" RadiusX="2" RadiusY="2" Opacity="0" RenderTransformOrigin="0.5,0.5">
              <Rectangle.RenderTransform>
                <TransformGroup>
                  <ScaleTransform ScaleY="-1" />
                  <SkewTransform />
                  <RotateTransform />
                  <TranslateTransform />
                </TransformGroup>
              </Rectangle.RenderTransform>
            </Rectangle>
            <Grid Margin="{TemplateBinding Control.Padding}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="18" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Grid Height="18" HorizontalAlignment="Left" VerticalAlignment="Top">
                <Grid.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform Angle="180" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </Grid.LayoutTransform>
                <Ellipse Name="circleOver1" Width="18" Height="18" Fill="{StaticResource ExpanderArrowHoverFill1}" Stroke="#00000000" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                <Ellipse Name="circleOver2" Width="18" Height="18" Fill="{StaticResource ExpanderArrowHoverFill2}" Stroke="#00000000" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                <Ellipse Name="circleOver3" Width="18" Height="18" Fill="{StaticResource ExpanderArrowHoverFill3}" Stroke="{StaticResource expanderArrowStroke}" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                <Ellipse Name="circlePress1" Width="18" Height="18" Fill="{StaticResource ExpanderArrowPressedFill1}" Stroke="#00000000" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                <Ellipse Name="circlePress2" Width="18" Height="18" Fill="{StaticResource ExpanderArrowPressedFill2}" Stroke="#00000000" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                <Ellipse Name="circlePress3" Width="18" Height="18" Fill="{StaticResource ExpanderArrowPressedFill3}" Stroke="{StaticResource expanderArrowStroke}" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                <Path Name="arrowUp" Stroke="{StaticResource ButtonFontColor}" StrokeThickness="2" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                  <Path.RenderTransform>
                    <TransformGroup>
                      <ScaleTransform ScaleY="-1" />
                    </TransformGroup>
                  </Path.RenderTransform>
                </Path>
              </Grid>
              <ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Left" Margin="4,2,0,2" VerticalAlignment="Center" Grid.Column="1" RecognizesAccessKey="True" />
            </Grid>
            <Rectangle Name="FocusBackground" Stroke="{StaticResource selectedStroke}" RadiusX="2" RadiusY="2" IsHitTestVisible="False" Opacity="0" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsFocused" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource FocusedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource FocusedOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard Name="CheckedOff_BeginStoryboard" Storyboard="{StaticResource CheckedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Name="CheckedOn_BeginStoryboard" Storyboard="{StaticResource CheckedOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Name="HoverOn_BeginStoryboard" Storyboard="{StaticResource HoverOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
              </Trigger.EnterActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="circleOver1" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="circleOver2" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="circleOver3" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="circleOver1" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="circleOver2" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="circleOver3" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
            <Storyboard x:Key="PressedOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="circlePress1" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="circlePress2" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="circlePress3" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="HoverBackground1" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
            <Storyboard x:Key="PressedOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="circlePress1" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="circlePress2" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="circlePress3" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="HoverBackground1" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
            <Storyboard x:Key="CheckedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="arrowLeft" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="-1" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="arrowLeft" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="-90" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HoverBackground2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="CheckedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="arrowLeft" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="arrowLeft" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="90" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HoverBackground2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusBackground" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.84" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusBackground" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid>
            <Rectangle Name="HoverBackground" Fill="{StaticResource hoverGradientVertical}" Stroke="{StaticResource hoverStroke}" RadiusX="2" RadiusY="2" Opacity="0" RenderTransformOrigin="0.5,0.5">
              <Rectangle.RenderTransform>
                <TransformGroup>
                  <ScaleTransform ScaleX="-1" />
                  <SkewTransform />
                  <RotateTransform />
                  <TranslateTransform />
                </TransformGroup>
              </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Name="HoverBackground1" Fill="{StaticResource hoverGradientVertical}" Stroke="{StaticResource hoverStroke}" RadiusX="2" RadiusY="2" Opacity="0" RenderTransformOrigin="0.5,0.5">
              <Rectangle.RenderTransform>
                <TransformGroup>
                  <ScaleTransform ScaleX="-1" />
                  <SkewTransform />
                  <RotateTransform />
                  <TranslateTransform />
                </TransformGroup>
              </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Name="HoverBackground2" Fill="{StaticResource hoverGradientVertical}" Stroke="{StaticResource hoverStroke}" RadiusX="2" RadiusY="2" Opacity="0" RenderTransformOrigin="0.5,0.5">
              <Rectangle.RenderTransform>
                <TransformGroup>
                  <ScaleTransform ScaleX="-1" />
                  <SkewTransform />
                  <RotateTransform />
                  <TranslateTransform />
                </TransformGroup>
              </Rectangle.RenderTransform>
            </Rectangle>
            <Grid Margin="{TemplateBinding Control.Padding}">
              <Grid.RowDefinitions>
                <RowDefinition Height="18" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <Grid Width="18" HorizontalAlignment="Center" VerticalAlignment="Top">
                <Grid.LayoutTransform>
                  <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1" />
                    <SkewTransform AngleX="0" AngleY="0" />
                    <RotateTransform Angle="0" />
                    <TranslateTransform X="0" Y="0" />
                  </TransformGroup>
                </Grid.LayoutTransform>
                <Ellipse Name="circleOver1" Width="18" Height="18" Fill="{StaticResource ExpanderArrowHoverFill1}" Stroke="#00000000" Opacity="0" />
                <Ellipse Name="circleOver2" Width="18" Height="18" Fill="{StaticResource ExpanderArrowHoverFill2}" Stroke="#00000000" Opacity="0" />
                <Ellipse Name="circleOver3" Width="18" Height="18" Fill="{StaticResource ExpanderArrowHoverFill3}" Stroke="{StaticResource expanderArrowStroke}" Opacity="0" />
                <Ellipse Name="circlePress1" Width="18" Height="18" Fill="{StaticResource ExpanderArrowPressedFill1}" Stroke="#00000000" Opacity="0" />
                <Ellipse Name="circlePress2" Width="18" Height="18" Fill="{StaticResource ExpanderArrowPressedFill2}" Stroke="#00000000" Opacity="0" />
                <Ellipse Name="circlePress3" Width="18" Height="18" Fill="{StaticResource ExpanderArrowPressedFill3}" Stroke="{StaticResource expanderArrowStroke}" Opacity="0" />
                <Path Name="arrowLeft" Stroke="{StaticResource ButtonFontColor}" StrokeThickness="2" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                  <Path.RenderTransform>
                    <TransformGroup>
                      <ScaleTransform />
                      <SkewTransform />
                      <RotateTransform Angle="90" />
                      <TranslateTransform />
                    </TransformGroup>
                  </Path.RenderTransform>
                </Path>
              </Grid>
              <ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Center" Margin="3,4,3,0" VerticalAlignment="Top" Grid.Row="1" RecognizesAccessKey="True">
                <ContentPresenter.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform Angle="90" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </ContentPresenter.LayoutTransform>
              </ContentPresenter>
            </Grid>
            <Rectangle Name="FocusBackground" Stroke="{StaticResource selectedStroke}" RadiusX="2" RadiusY="2" IsHitTestVisible="False" Opacity="0" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsFocused" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource FocusedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource FocusedOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard Name="CheckedOff_BeginStoryboard" Storyboard="{StaticResource CheckedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Name="CheckedOn_BeginStoryboard" Storyboard="{StaticResource CheckedOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Name="HoverOn_BeginStoryboard" Storyboard="{StaticResource HoverOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
              </Trigger.EnterActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Expander}" TargetType="{x:Type Expander}">
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.Foreground" Value="{StaticResource ButtonFontColor}" />
    <Setter Property="Control.FontWeight" Value="Bold" />
    <Setter Property="Control.Padding" Value="4" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Control.VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Expander}">
          <Border SnapsToDevicePixels="True" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1,1,1,1" CornerRadius="3">
            <Grid>
              <DockPanel>
                <ToggleButton Name="HeaderSite" FontFamily="{TemplateBinding Control.FontFamily}" FontSize="{TemplateBinding Control.FontSize}" FontStretch="{TemplateBinding Control.FontStretch}" FontStyle="{TemplateBinding Control.FontStyle}" FontWeight="{TemplateBinding Control.FontWeight}" Foreground="{TemplateBinding Control.Foreground}" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Padding="{TemplateBinding Control.Padding}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" Margin="1,1,1,0" MinHeight="0" MinWidth="0" Style="{StaticResource ExpanderDownHeaderStyle}" Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderedContentControl.HeaderTemplateSelector}" DockPanel.Dock="Top" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                <Border Name="border" Grid.Column="0" Grid.Row="1" Background="#FFFFFFFF" BorderThickness="1" CornerRadius="2" Padding="0" Visibility="Collapsed">
                  <Border.BorderBrush>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                      <GradientStop Color="#FFABAEB3" Offset="0" />
                      <GradientStop Color="#FFE2E8EE" Offset="0.355" />
                    </LinearGradientBrush>
                  </Border.BorderBrush>
                  <ContentPresenter Name="ExpandSite" Focusable="False" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="1,1,1,1" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" DockPanel.Dock="Bottom" />
                </Border>
              </DockPanel>
              <Border Name="DisabledVisualElement" IsHitTestVisible="False" Background="#A5FFFFFF" Opacity="0" />
              <Border Name="FocusVisualElement" IsHitTestVisible="False" BorderBrush="#00FFFFFF" BorderThickness="1" Visibility="Collapsed" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Expander.IsExpanded" Value="True">
              <Setter TargetName="border" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="Expander.ExpandDirection" Value="Down" />
            <Trigger Property="Expander.ExpandDirection" Value="Right">
              <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Right" />
              <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" />
              <Setter TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}" Property="FrameworkElement.Style" />
            </Trigger>
            <Trigger Property="Expander.ExpandDirection" Value="Up">
              <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top" />
              <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
              <Setter TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}" Property="FrameworkElement.Style" />
            </Trigger>
            <Trigger Property="Expander.ExpandDirection" Value="Left">
              <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left" />
              <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
              <Setter TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}" Property="FrameworkElement.Style" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
              <Setter TargetName="DisabledVisualElement" Property="UIElement.Opacity" Value="1" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
    <ControlTemplate.Resources>
      <Storyboard x:Key="HoverOn">
        <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BtnOver" Storyboard.TargetProperty="Opacity" To="0.8" />
        <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Background_over" Storyboard.TargetProperty="Opacity" To="1" />
      </Storyboard>
      <Storyboard x:Key="HoverOff">
        <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BtnOver" Storyboard.TargetProperty="Opacity" To="0" />
        <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="Background_over" Storyboard.TargetProperty="Opacity" To="0" />
      </Storyboard>
      <Storyboard x:Key="PressedOn">
        <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BtnPress" Storyboard.TargetProperty="Opacity" To="0.8" />
        <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Background_press" Storyboard.TargetProperty="Opacity" To="1" />
        <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BtnPress_highlight" Storyboard.TargetProperty="Opacity" To="1" />
      </Storyboard>
      <Storyboard x:Key="PressedOff">
        <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BtnPress" Storyboard.TargetProperty="Opacity" To="0" />
        <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="Background_press" Storyboard.TargetProperty="Opacity" To="0" />
        <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BtnPress_highlight" Storyboard.TargetProperty="Opacity" To="0" />
      </Storyboard>
    </ControlTemplate.Resources>
    <Grid>
      <Rectangle Name="Background" Fill="#FFFFFFFF" Stroke="#FFABAEB3" RadiusX="3" RadiusY="3" IsHitTestVisible="False" />
      <Rectangle Name="Background_over" Stroke="{StaticResource TextBoxOverBrush}" RadiusX="3" RadiusY="3" Opacity="0" IsHitTestVisible="False" />
      <Rectangle Name="Background_press" Stroke="{StaticResource TextBoxPressBrush}" RadiusX="3" RadiusY="3" Opacity="0" IsHitTestVisible="False" />
      <Border Name="BtnOver" Width="20" Background="{StaticResource BtnOverFill}" BorderBrush="{StaticResource TextBoxPressBrush}" BorderThickness="1" CornerRadius="0,3,3,0" Opacity="0" HorizontalAlignment="Right" />
      <Border Name="BtnPress" Width="20" Background="{StaticResource BtnPressFill}" BorderBrush="{StaticResource btnPressStroke1}" BorderThickness="1" CornerRadius="0,3,3,0" Opacity="0" HorizontalAlignment="Right" />
      <Border Name="BtnPress_highlight" Background="{StaticResource ComboTogglePressHighlight}" Margin="1" Width="18" CornerRadius="0,2,2,0" Opacity="0" HorizontalAlignment="Right" />
      <Border Name="BtnOverlay" Margin="1" Width="18" CornerRadius="0,2,2,0" HorizontalAlignment="Right">
        <Border.Background>
          <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#00FFFFFF" />
            <GradientStop Color="#72FFFFFF" Offset="0.189" />
            <GradientStop Color="#72FFFFFF" Offset="0.5" />
            <GradientStop Color="#00FFFFFF" Offset="0.51" />
          </LinearGradientBrush>
        </Border.Background>
      </Border>
      <Path Name="BtnArrow" Margin="0,0,7,0" Width="6" Data="F1M301.14,-189.041L311.57,-189.041 306.355,-182.942 301.14,-189.041z" HorizontalAlignment="Right" Stretch="Uniform">
        <Path.Fill>
          <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="{StaticResource Arrow}" Offset="0" />
            <GradientStop Color="#FF000000" Offset="1" />
          </LinearGradientBrush>
        </Path.Fill>
      </Path>
      <Rectangle Name="DisabledVisualElement" Margin="1" Fill="#00FFFFFF" RadiusX="3" RadiusY="3" IsHitTestVisible="False" Visibility="Collapsed" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsMouseOver" Value="True">
        <Trigger.ExitActions>
          <BeginStoryboard Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
        </Trigger.ExitActions>
        <Trigger.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
        </Trigger.EnterActions>
      </Trigger>
      <Trigger Property="ToggleButton.IsChecked" Value="true" />
      <Trigger Property="ButtonBase.IsPressed" Value="True">
        <Trigger.ExitActions>
          <BeginStoryboard Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
        </Trigger.ExitActions>
        <Trigger.EnterActions>
          <BeginStoryboard Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
        </Trigger.EnterActions>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground" />
        <Setter TargetName="DisabledVisualElement" Property="UIElement.Visibility" Value="Visible" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
    <Border Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Control.Background}" />
  </ControlTemplate>
  <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="Control.Foreground" Value="{StaticResource OutsideFontColor}" />
    <Setter Property="Control.Template" Value="{DynamicResource ComboBoxTemplate}" />
  </Style>
  <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
    <ControlTemplate.Resources>
      <Storyboard x:Key="FocusedOn">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="FocusedOff">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
    </ControlTemplate.Resources>
    <Grid>
      <ToggleButton Name="ToggleButton" Grid.Column="2" Template="{DynamicResource ComboBoxToggleButton}" Focusable="False" ClickMode="Press" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
      <ContentPresenter Name="ContentSite" HorizontalAlignment="Left" Margin="3,3,23,3" VerticalAlignment="Center" Content="{TemplateBinding ComboBox.SelectionBoxItem}" ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}" IsHitTestVisible="False" />
      <TextBox Name="PART_EditableTextBox" Visibility="Hidden" Template="{DynamicResource ComboBoxTextBox}" HorizontalAlignment="Left" Margin="3,3,23,3" VerticalAlignment="Center" Focusable="True" Background="#00FFFFFF" IsReadOnly="{TemplateBinding ComboBox.IsReadOnly}" Style="{x:Null}" />
      <Rectangle Name="DisabledVisualElement" Fill="#A5FFFFFF" RadiusX="4" RadiusY="4" IsHitTestVisible="False" Visibility="Collapsed" />
      <Rectangle Name="FocusVisualElement" Margin="-1" Stroke="{StaticResource selectedStroke}" StrokeThickness="1" RadiusX="4" RadiusY="4" IsHitTestVisible="False" Opacity="0" />
      <Popup Name="Popup" IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}" Placement="Bottom" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
        <Grid Name="DropDown" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" SnapsToDevicePixels="True">
          <Border Name="DropDownBorder" Background="#FFFFFFFF" BorderBrush="{StaticResource TextBoxNorm}" BorderThickness="1" CornerRadius="1,1,3,3">
            <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True">
              <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
            </ScrollViewer>
          </Border>
        </Grid>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsFocused" Value="True">
        <Trigger.ExitActions>
          <BeginStoryboard Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}" />
        </Trigger.ExitActions>
        <Trigger.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource FocusedOn}" />
        </Trigger.EnterActions>
      </Trigger>
      <Trigger Property="ItemsControl.HasItems" Value="False">
        <Setter TargetName="DropDownBorder" Property="FrameworkElement.MinHeight" Value="95" />
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground" />
        <Setter TargetName="DisabledVisualElement" Property="UIElement.Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="ItemsControl.IsGrouping" Value="True">
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
      </Trigger>
      <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
        <Setter TargetName="DropDownBorder" Property="Border.CornerRadius" Value="4" />
        <Setter TargetName="DropDownBorder" Property="FrameworkElement.Margin" Value="0,2,0,0" />
      </Trigger>
      <Trigger Property="ComboBox.IsEditable" Value="True">
        <Setter Property="Control.IsTabStop" Value="False" />
        <Setter TargetName="PART_EditableTextBox" Property="UIElement.Visibility" Value="Visible" />
        <Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Hidden" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Padding" Value="3" />
    <Setter Property="Control.Foreground" Value="{StaticResource OutsideFontColor}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientOver" Storyboard.TargetProperty="Opacity" To="0.73" />
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundGradientOver" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
            <Storyboard x:Key="SelectedOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientSelected" Storyboard.TargetProperty="Opacity" To="0.84" />
            </Storyboard>
            <Storyboard x:Key="SelectedOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundGradientSelected" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid SnapsToDevicePixels="True">
            <Rectangle Name="BackgroundGradientOver" Fill="{StaticResource hoverGradient}" Stroke="{StaticResource hoverStroke}" RadiusX="2" RadiusY="2" Opacity="0" />
            <Rectangle Name="BackgroundGradientSelected" Fill="{StaticResource BtnOverFill}" Stroke="{StaticResource selectedStroke}" RadiusX="2" RadiusY="2" Opacity="0" />
            <Rectangle Name="BackgroundHighlight" Margin="1" Stroke="#A0FFFFFF" RadiusX="1" RadiusY="1" />
            <ContentPresenter Name="contentPresenter" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Name="HoverOn_BeginStoryboard" Storyboard="{StaticResource HoverOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="ComboBoxItem.IsHighlighted" Value="True" />
            <Trigger Property="Selector.IsSelected" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Name="SelectedOff_BeginStoryboard1" Storyboard="{StaticResource SelectedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Name="SelectedOn_BeginStoryboard1" Storyboard="{StaticResource SelectedOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ProgressBar}" TargetType="{x:Type ProgressBar}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ProgressBar}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="IndeterminateOn" RepeatBehavior="Forever">
              <DoubleAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateGradientFill" Storyboard.TargetProperty="(Shape.Fill).(Brush.Transform).(TransformGroup.Children)[0].X" RepeatBehavior="Forever">
                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                <SplineDoubleKeyFrame KeyTime="00:00:.5" Value="20" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid>
            <Border Name="PART_Track" BorderThickness="1" CornerRadius="3" Opacity="0.825">
              <Border.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                  <GradientStop Color="#FFFFFFFF" />
                  <GradientStop Color="#FFD8D8D8" Offset="0.327" />
                  <GradientStop Color="#FFDADADA" Offset="0.488" />
                  <GradientStop Color="#FFBEBEBE" Offset="0.539" />
                  <GradientStop Color="#FFD6D6D6" Offset="0.77" />
                  <GradientStop Color="#FFFFFFFF" Offset="1" />
                </LinearGradientBrush>
              </Border.Background>
              <Border.BorderBrush>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                  <GradientStop Color="#FFBBBBBB" Offset="0" />
                  <GradientStop Color="#FF7E7E7E" Offset="1" />
                </LinearGradientBrush>
              </Border.BorderBrush>
            </Border>
            <Grid Name="IndeterminateRoot" Visibility="Collapsed">
              <Rectangle Name="IndeterminateSolidFill" Margin="1" Fill="#FF00C120" RadiusX="2" RadiusY="2" />
              <Rectangle Name="ProgressBarRootGradient" Margin="1" RadiusX="1.5" RadiusY="1.5" Panel.ZIndex="1">
                <Rectangle.Fill>
                  <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFE8FFEC" Offset="0" />
                    <GradientStop Color="#84BDFFC9" Offset="0.516" />
                    <GradientStop Color="#00D6D6D6" Offset="0.521" />
                    <GradientStop Color="#FF7BFF94" Offset="1" />
                  </LinearGradientBrush>
                </Rectangle.Fill>
              </Rectangle>
              <Rectangle Name="IndeterminateGradientFill" Margin="1" StrokeThickness="1" RadiusX="2" RadiusY="2" Opacity="0.7">
                <Rectangle.Fill>
                  <LinearGradientBrush EndPoint="0,1" StartPoint="20,1" MappingMode="Absolute" SpreadMethod="Repeat">
                    <LinearGradientBrush.Transform>
                      <TransformGroup>
                        <TranslateTransform X="0" />
                        <SkewTransform AngleX="-10" />
                      </TransformGroup>
                    </LinearGradientBrush.Transform>
                    <GradientStop Color="#FF95FFA8" Offset="0.129" />
                    <GradientStop Color="#9159FF76" Offset="0.304" />
                    <GradientStop Color="#0007B324" Offset="0.498" />
                    <GradientStop Color="#8661FF7C" Offset="0.714" />
                    <GradientStop Color="#FF8BFFA1" Offset="0.949" />
                  </LinearGradientBrush>
                </Rectangle.Fill>
              </Rectangle>
            </Grid>
            <Grid Name="DeterminateRoot">
              <Rectangle Name="PART_Indicator" Margin="1" RadiusX="1.5" RadiusY="1.5" HorizontalAlignment="Left" Opacity="0.83">
                <Rectangle.Fill>
                  <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFE4FFDA" Offset="0" />
                    <GradientStop Color="#FFBDF4C0" Offset="0.198" />
                    <GradientStop Color="#FF9CEBAB" Offset="0.516" />
                    <GradientStop Color="#FF00C523" Offset="0.521" />
                    <GradientStop Color="#FF00D724" Offset="0.797" />
                    <GradientStop Color="#FF10DC2E" Offset="1" />
                  </LinearGradientBrush>
                </Rectangle.Fill>
              </Rectangle>
            </Grid>
            <Border Name="DisabledVisualElement" Background="#A5FFFFFF" BorderBrush="#59C0C0C0" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="3" IsHitTestVisible="False" Visibility="Collapsed" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="DisabledVisualElement" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="ProgressBar.IsIndeterminate" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource IndeterminateOn}" />
              </Trigger.EnterActions>
              <Setter TargetName="IndeterminateRoot" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="DeterminateRoot" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="UIElement.AllowDrop" Value="True" />
    <Setter Property="Control.Background" Value="#FFFFFFFF" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Control.VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Control.Padding" Value="4" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Template" Value="{DynamicResource TextBoxTemplate}" />
  </Style>
  <ControlTemplate x:Key="TextBoxTemplate" TargetType="{x:Type TextBox}">
    <ControlTemplate.Resources>
      <Storyboard x:Key="HoverOn">
        <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Over" Storyboard.TargetProperty="Opacity" To="1" />
      </Storyboard>
      <Storyboard x:Key="HoverOff">
        <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="Over" Storyboard.TargetProperty="Opacity" To="0" />
      </Storyboard>
      <Storyboard x:Key="FocusedOn">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="FocusedOff">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
    </ControlTemplate.Resources>
    <Grid>
      <Border Name="BorderBase" Background="{TemplateBinding Control.Background}" BorderBrush="{StaticResource TextBoxNorm}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="3" />
      <Border Name="Over" BorderBrush="{StaticResource TextBoxOver}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="3" Opacity="0" />
      <ScrollViewer Name="PART_ContentHost" Margin="0" Padding="{TemplateBinding Control.Padding}" />
      <Border Name="DisabledVisualElement" Background="#A5FFFFFF" BorderBrush="#59C0C0C0" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="3" IsHitTestVisible="False" Visibility="Collapsed" />
      <Border Name="FocusVisualElement" BorderBrush="{StaticResource TextBoxFocus}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="3" IsHitTestVisible="False" Opacity="0" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsFocused" Value="True">
        <Trigger.ExitActions>
          <BeginStoryboard Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}" />
        </Trigger.ExitActions>
        <Trigger.EnterActions>
          <BeginStoryboard Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}" />
        </Trigger.EnterActions>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="UIElement.IsMouseOver" Value="True" />
          <Condition Property="UIElement.IsFocused" Value="False" />
        </MultiTrigger.Conditions>
        <MultiTrigger.ExitActions>
          <BeginStoryboard Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
        </MultiTrigger.ExitActions>
        <MultiTrigger.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
        </MultiTrigger.EnterActions>
      </MultiTrigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground" />
        <Setter TargetName="DisabledVisualElement" Property="UIElement.Visibility" Value="Visible" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type PasswordBox}" TargetType="{x:Type PasswordBox}">
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="UIElement.AllowDrop" Value="True" />
    <Setter Property="Control.Background" Value="#FFFFFFFF" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Control.VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Control.Padding" Value="4" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type PasswordBox}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Over" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="Over" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid>
            <Border Name="BorderBase" Background="{TemplateBinding Control.Background}" BorderBrush="{StaticResource TextBoxNorm}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="3" />
            <Border Name="Over" BorderBrush="{StaticResource TextBoxOver}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="3" Opacity="0" />
            <ScrollViewer Name="PART_ContentHost" Margin="0" Padding="{TemplateBinding Control.Padding}" />
            <Border Name="DisabledVisualElement" Background="#A5FFFFFF" BorderBrush="#59C0C0C0" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="3" IsHitTestVisible="False" Visibility="Collapsed" />
            <Border Name="FocusVisualElement" BorderBrush="{StaticResource TextBoxFocus}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="3" IsHitTestVisible="False" Opacity="0" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsFocused" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="True" />
                <Condition Property="UIElement.IsFocused" Value="False" />
              </MultiTrigger.Conditions>
              <MultiTrigger.ExitActions>
                <BeginStoryboard Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
              </MultiTrigger.ExitActions>
              <MultiTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
              </MultiTrigger.EnterActions>
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground" />
              <Setter TargetName="DisabledVisualElement" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type RichTextBox}" TargetType="{x:Type RichTextBox}">
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="UIElement.AllowDrop" Value="True" />
    <Setter Property="Control.Background" Value="#FFFFFFFF" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Control.VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Control.Padding" Value="4" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RichTextBox}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Over" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="Over" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid>
            <Border Name="BorderBase" Background="{TemplateBinding Control.Background}" BorderBrush="{StaticResource TextBoxNorm}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="3" />
            <Border Name="Over" BorderBrush="{StaticResource TextBoxOver}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="3" Opacity="0" />
            <ScrollViewer Name="PART_ContentHost" Margin="0" Padding="{TemplateBinding Control.Padding}" />
            <Border Name="DisabledVisualElement" Background="#A5FFFFFF" BorderBrush="#59C0C0C0" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="3" IsHitTestVisible="False" Visibility="Collapsed" />
            <Border Name="FocusVisualElement" BorderBrush="{StaticResource TextBoxFocus}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="3" IsHitTestVisible="False" Opacity="0" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsFocused" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="True" />
                <Condition Property="UIElement.IsFocused" Value="False" />
              </MultiTrigger.Conditions>
              <MultiTrigger.ExitActions>
                <BeginStoryboard Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
              </MultiTrigger.ExitActions>
              <MultiTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
              </MultiTrigger.EnterActions>
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground" />
              <Setter TargetName="DisabledVisualElement" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Label}" TargetType="{x:Type Label}">
    <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
    <Setter Property="Control.VerticalContentAlignment" Value="Top" />
    <Setter Property="Control.Foreground" Value="{StaticResource OutsideFontColor}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Label}">
          <Grid>
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" RecognizesAccessKey="True" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False" />
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Menu}" TargetType="{x:Type Menu}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="Control.Foreground" Value="{StaticResource OutsideFontColor}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Menu}">
          <Grid>
            <Border Name="Border" Background="{StaticResource grayGradient}" />
            <StackPanel IsItemsHost="True" ClipToBounds="True" Orientation="Horizontal" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Border" Property="Border.Background" Value="#A5FFFFFF" />
              <Setter TargetName="Border" Property="Border.BorderBrush" Value="#59C0C0C0" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <DropShadowBitmapEffect x:Key="PopupDropShadow" ShadowDepth="1.5" Softness="0.15" />
  <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
    <Setter Property="Control.HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Control.VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.Foreground" Value="{StaticResource OutsideFontColor}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="HighlightOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientSelected" Storyboard.TargetProperty="Opacity" To="0.84" />
            </Storyboard>
            <Storyboard x:Key="HighlightOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundGradientSelected" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
          </ControlTemplate.Resources>
          <Border Name="Border" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
            <Grid Margin="1,1,1,1">
              <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                <ColumnDefinition Width="14" />
              </Grid.ColumnDefinitions>
              <Rectangle Name="BackgroundGradientOver" Fill="{StaticResource hoverGradient}" Stroke="{StaticResource hoverStroke}" RadiusX="2" RadiusY="2" Opacity="0" Grid.ColumnSpan="4" />
              <Rectangle Name="BackgroundGradientSelected" Fill="{StaticResource BtnOverFill}" Stroke="{StaticResource selectedStroke}" RadiusX="2" RadiusY="2" Opacity="0" Grid.ColumnSpan="4" />
              <Rectangle Name="BackgroundHighlight" Margin="1" Stroke="#A0FFFFFF" RadiusX="1" RadiusY="1" Grid.ColumnSpan="4" Opacity="0" />
              <ContentPresenter Name="Icon" Margin="4,0,6,0" VerticalAlignment="Center" ContentSource="Icon" />
              <Grid Name="GlyphPanel" Visibility="Hidden" Margin="4,0,6,0" VerticalAlignment="Center">
                <Path Name="GlyphPanelpath" VerticalAlignment="Center" Fill="{TemplateBinding Control.Foreground}" Data="M0,2L0,4.8 2.5,7.4 7.1,2.8 7.1,0 2.5,4.6z" FlowDirection="LeftToRight" />
              </Grid>
              <ContentPresenter Name="HeaderHost" Grid.Column="1" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" ContentSource="Header" />
              <Grid Name="ArrowPanel" Grid.Column="3" Margin="4,0,6,0" VerticalAlignment="Center">
                <Path Name="ArrowPanelPath" VerticalAlignment="Center" Fill="{TemplateBinding Control.Foreground}" Data="M0,0L0,8 4,4z" />
              </Grid>
              <Popup Name="SubMenuPopup" Placement="Right" Focusable="False" AllowsTransparency="True" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" VerticalOffset="-3" IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                <Grid Name="SubMenu">
                  <Border Name="SubMenuBorder" Background="#FFFFFFFF" BorderBrush="{StaticResource TextBoxNorm}" BorderThickness="1" />
                  <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                </Grid>
              </Popup>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="MenuItem.Role" Value="TopLevelHeader">
              <Setter Property="FrameworkElement.Margin" Value="0,1,0,1" />
              <Setter Property="Control.Padding" Value="6,3,6,3" />
              <Setter Property="Grid.IsSharedSizeScope" Value="True" />
              <Setter TargetName="SubMenuPopup" Property="Popup.Placement" Value="Bottom" />
              <Setter TargetName="ArrowPanel" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="MenuItem.Role" Value="TopLevelItem">
              <Setter Property="FrameworkElement.Margin" Value="0,1,0,1" />
              <Setter Property="Control.Padding" Value="6,3,6,3" />
              <Setter TargetName="ArrowPanel" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="MenuItem.Role" Value="SubmenuHeader">
              <Setter Property="DockPanel.Dock" Value="Top" />
              <Setter Property="Control.Padding" Value="0,2,0,2" />
              <Setter Property="Grid.IsSharedSizeScope" Value="True" />
            </Trigger>
            <Trigger Property="MenuItem.Role" Value="SubmenuItem">
              <Setter Property="DockPanel.Dock" Value="Top" />
              <Setter Property="Control.Padding" Value="0,2,0,2" />
              <Setter TargetName="ArrowPanel" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="True">
              <Setter TargetName="SubMenuPopup" Property="Popup.PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Value="{x:Null}" Property="MenuItem.Icon">
              <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="MenuItem.IsChecked" Value="True">
              <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger SourceName="SubMenuPopup" Property="Popup.AllowsTransparency" Value="True">
              <Setter TargetName="SubMenu" Property="FrameworkElement.Margin" Value="0,0,3,3" />
              <Setter TargetName="SubMenu" Property="UIElement.SnapsToDevicePixels" Value="True" />
              <Setter Value="{DynamicResource PopupDropShadow}" TargetName="SubMenuBorder" Property="UIElement.BitmapEffect" />
            </Trigger>
            <Trigger Property="MenuItem.IsHighlighted" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource HighlightOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HighlightOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Separator}" TargetType="{x:Type Separator}">
    <Setter Property="FrameworkElement.Height" Value="1" />
    <Setter Property="FrameworkElement.Margin" Value="0,2,0,2" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border BorderBrush="#FF888888" BorderThickness="1" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type TabControl}" TargetType="{x:Type TabControl}">
    <Setter Property="Control.Background" Value="#FFFFFFFF" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Padding" Value="5" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Control.VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Control.Foreground" Value="{StaticResource OutsideFontColor}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabControl}">
          <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Name="ColumnDefinition0" />
              <ColumnDefinition Name="ColumnDefinition1" Width="0" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Name="RowDefinition0" Height="Auto" />
              <RowDefinition Name="RowDefinition1" Height="*" />
            </Grid.RowDefinitions>
            <Border Name="border" CornerRadius="2,2,0,0" Margin="0,0,0,-1.5" Panel.ZIndex="100">
              <TabPanel Name="HeaderPanel" IsItemsHost="True" ZIndex="1" KeyboardNavigation.TabIndex="1" RenderTransformOrigin="0.5,0.5" Width="Auto" Height="Auto" Margin="2,0,0,0">
                <TabPanel.LayoutTransform>
                  <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1" />
                    <SkewTransform AngleX="0" AngleY="0" />
                    <RotateTransform Angle="0" />
                    <TranslateTransform X="0" Y="0" />
                  </TransformGroup>
                </TabPanel.LayoutTransform>
                <TabPanel.RenderTransform>
                  <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1" />
                    <SkewTransform AngleX="0" AngleY="0" />
                    <RotateTransform />
                    <TranslateTransform X="0" Y="0" />
                  </TransformGroup>
                </TabPanel.RenderTransform>
              </TabPanel>
            </Border>
            <Border Name="ContentPanel" Grid.Row="1" MinHeight="10" MinWidth="10" Background="#FFFFFFFF" BorderBrush="#FF979AA2" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="1">
              <ContentPresenter Name="PART_SelectedContentHost" Margin="4" ContentSource="SelectedContent" />
            </Border>
            <Border Name="DisabledVisualTop" Grid.Row="1" Grid.RowSpan="2" Background="#8CFFFFFF" CornerRadius="1" Panel.ZIndex="1" IsHitTestVisible="False" Opacity="0" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
              <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="Auto" />
              <Setter TargetName="border" Property="Grid.Row" Value="1" />
              <Setter TargetName="ContentPanel" Property="Border.CornerRadius" Value="2,2,0,0" />
              <Setter TargetName="border" Property="Border.CornerRadius" Value="0,0,2,2" />
              <Setter TargetName="border" Property="FrameworkElement.Margin" Value="0,-1.5,0,0" />
            </Trigger>
            <Trigger Property="TabControl.TabStripPlacement" Value="Left">
              <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
              <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="Auto" />
              <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="*" />
              <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
              <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
              <Setter TargetName="border" Property="Grid.Column" Value="0" />
              <Setter TargetName="border" Property="FrameworkElement.Margin" Value="0,0,-1,0" />
              <Setter TargetName="ContentPanel" Property="FrameworkElement.Margin" Value="0,0,0,0" />
              <Setter TargetName="border" Property="Border.CornerRadius" Value="0,2,2,0" />
              <Setter TargetName="ContentPanel" Property="Border.CornerRadius" Value="0,2,2,0" />
              <Setter TargetName="HeaderPanel" Property="FrameworkElement.Margin" Value="5,2,0,0" />
            </Trigger>
            <Trigger Property="TabControl.TabStripPlacement" Value="Right">
              <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
              <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="*" />
              <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="Auto" />
              <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
              <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
              <Setter TargetName="border" Property="Grid.Column" Value="1" />
              <Setter TargetName="ContentPanel" Property="Border.CornerRadius" Value="2,0,0,2" />
              <Setter TargetName="border" Property="Border.CornerRadius" Value="0,2,2,0" />
              <Setter TargetName="border" Property="FrameworkElement.Margin" Value="-6,2,0,0" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
              <Setter TargetName="DisabledVisualTop" Property="UIElement.Opacity" Value="1" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type TabItem}" TargetType="{x:Type TabItem}">
    <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Padding" Value="10,6,10,6" />
    <Setter Property="FrameworkElement.MinWidth" Value="5" />
    <Setter Property="FrameworkElement.MinHeight" Value="5" />
    <Setter Property="Control.Foreground" Value="{StaticResource OutsideFontColor}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabItem}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="SelectedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TemplateTopSelected" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TemplateTopUnselected" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="SelectedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TemplateTopSelected" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TemplateTopUnselected" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TopUnselectedOver" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TopUnselectedOver" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid Name="grid">
            <Grid.LayoutTransform>
              <TransformGroup>
                <ScaleTransform ScaleX="1" ScaleY="1" />
                <SkewTransform AngleX="0" AngleY="0" />
                <RotateTransform Angle="0" />
                <TranslateTransform X="0" Y="0" />
              </TransformGroup>
            </Grid.LayoutTransform>
            <Grid Name="TemplateTopSelected" Margin="-2,0,-2,0" ZIndex="0" Opacity="0">
              <Grid>
                <Border Name="BackgroundTop" Background="#FFFFFFFF" BorderBrush="#FF979AA2" BorderThickness="1,1,1,0" />
              </Grid>
              <Border Name="DisabledVisualTopSelected" Background="#8CFFFFFF" IsHitTestVisible="False" Visibility="Collapsed" />
            </Grid>
            <Grid Name="TemplateTopUnselected" Margin="0,2,0,1">
              <Grid>
                <Border Name="TopUnselected_Background" BorderBrush="#FF94979F" BorderThickness="1,1,1,0">
                  <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                      <GradientStop Color="#FFFFFFFF" Offset="0" />
                      <GradientStop Color="#FFF3F3F3" Offset="0.152" />
                      <GradientStop Color="#FFF3F3F3" Offset="0.456" />
                      <GradientStop Color="#FFEBEBEB" Offset="0.465" />
                      <GradientStop Color="#FFD6D6D5" Offset="1" />
                    </LinearGradientBrush>
                  </Border.Background>
                </Border>
                <Border Name="TopUnselectedOver" Background="{StaticResource BtnOverFill}" BorderBrush="{StaticResource TabOverStroke}" BorderThickness="1,1,1,0" Opacity="0" />
                <Border Name="TopUnselected_Highlight" Margin="1" BorderBrush="#FFFFFFFF" BorderThickness="1,1,1,0" />
              </Grid>
              <Border Name="DisabledVisualTopUnSelected" Background="#8CFFFFFF" IsHitTestVisible="False" Visibility="Collapsed" />
            </Grid>
            <ContentPresenter Name="ContentSite" HorizontalAlignment="Center" Margin="{TemplateBinding Control.Padding}" VerticalAlignment="Center" RecognizesAccessKey="True" ContentSource="Header" Opacity="1" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="TabItem.TabStripPlacement" Value="Left">
              <Setter TargetName="grid" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1" />
                    <SkewTransform AngleX="0" AngleY="0" />
                    <RotateTransform Angle="-90" />
                    <TranslateTransform X="0" Y="0" />
                  </TransformGroup>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="TabItem.TabStripPlacement" Value="Right">
              <Setter TargetName="grid" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1" />
                    <SkewTransform AngleX="0" AngleY="0" />
                    <RotateTransform Angle="90" />
                    <TranslateTransform X="0" Y="0" />
                  </TransformGroup>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="TabItem.TabStripPlacement" Value="Bottom">
              <Setter TargetName="ContentSite" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1" />
                    <SkewTransform AngleX="0" AngleY="0" />
                    <RotateTransform Angle="180" />
                    <TranslateTransform X="0" Y="0" />
                  </TransformGroup>
                </Setter.Value>
              </Setter>
              <Setter TargetName="grid" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1" />
                    <SkewTransform AngleX="0" AngleY="0" />
                    <RotateTransform Angle="180" />
                    <TranslateTransform X="0" Y="0" />
                  </TransformGroup>
                </Setter.Value>
              </Setter>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.ExitActions>
                <BeginStoryboard Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
              </MultiTrigger.ExitActions>
              <MultiTrigger.EnterActions>
                <BeginStoryboard Name="HoverOn_BeginStoryboard" Storyboard="{StaticResource HoverOn}" />
              </MultiTrigger.EnterActions>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="True" />
                <Condition Property="Selector.IsSelected" Value="False" />
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="TabItem.IsSelected" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource SelectedOn}" />
              </Trigger.EnterActions>
              <Setter Property="Panel.ZIndex" Value="100" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition SourceName="grid" Property="UIElement.IsMouseOver" Value="True" />
                <Condition Property="Selector.IsSelected" Value="True" />
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground" />
              <Setter TargetName="DisabledVisualTopUnSelected" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Foreground" Value="{DynamicResource OutsideFontColor}" />
  </Style>
  <Style x:Key="NuclearSliderThumb" TargetType="{x:Type Thumb}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="FrameworkElement.Height" Value="21" />
    <Setter Property="FrameworkElement.Width" Value="11" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Over" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="Over" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
            <Storyboard x:Key="PressedOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Press" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
            <Storyboard x:Key="PressedOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="Press" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid>
            <Path Name="Base" Stretch="Fill" Stroke="#FF707070" StrokeThickness="1" StrokeLineJoin="Round" Data="F1M0,1C0,0,1,0,1,0L7,0C7,0 7.75,0 8,1 8.013672,1.054688 8,11.875 8,11.875L4.625,15.25C4.3125,15.583984,3.625,15.25,3.625,15.25L0,11.75C0,11.75,0,1.0625,0,1z">
              <Path.Fill>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                  <GradientStop Color="#FFFFFFFF" Offset="0" />
                  <GradientStop Color="#FFF2F2F2" Offset="0.498" />
                  <GradientStop Color="#FFE1E1E1" Offset="0.498" />
                  <GradientStop Color="#FFF3F3F3" Offset="0.143" />
                  <GradientStop Color="#FFD1D1D1" Offset="1" />
                </LinearGradientBrush>
              </Path.Fill>
            </Path>
            <Path Name="Over" Fill="{StaticResource ThumbOver}" Stroke="{StaticResource TextBoxPressBrush}" Stretch="Fill" Data="F1M0,1C0,0,1,0,1,0L7,0C7,0 7.75,0 8,1 8.013672,1.054688 8,11.875 8,11.875L4.625,15.25C4.3125,15.583984,3.625,15.25,3.625,15.25L0,11.75C0,11.75,0,1.0625,0,1z" Opacity="0" />
            <Path Name="Press" Fill="{StaticResource ThumbPress}" Stroke="{StaticResource btnPressStroke2}" Stretch="Fill" Data="F1M0,1C0,0,1,0,1,0L7,0C7,0 7.75,0 8,1 8.013672,1.054688 8,11.875 8,11.875L4.625,15.25C4.3125,15.583984,3.625,15.25,3.625,15.25L0,11.75C0,11.75,0,1.0625,0,1z" Opacity="0" />
            <Path Name="Highlight" Margin="1" Stroke="#FFFFFFFF" Stretch="Fill" Data="F1M0,1C0,0,1,0,1,0L7,0C7,0 7.75,0 8,1 8.013672,1.054688 8,11.875 8,11.875L4.625,15.25C4.3125,15.583984,3.625,15.25,3.625,15.25L0,11.75C0,11.75,0,1.0625,0,1z" />
            <Path Name="DisabledVisualElement" Fill="#FFFFFFFF" Stroke="#FFFFFFFF" StrokeThickness="1" StrokeLineJoin="Round" Stretch="Fill" Opacity="0.5" Data="F1M0,1C0,0,1,0,1,0L7,0C7,0 7.75,0 8,1 8.013672,1.054688 8,11.875 8,11.875L4.625,15.25C4.3125,15.583984,3.625,15.25,3.625,15.25L0,11.75C0,11.75,0,1.0625,0,1z" IsHitTestVisible="False" Visibility="Collapsed" />
            <Path Name="FocusVisualElement" Margin="-1" Stroke="{StaticResource btnFocus}" StrokeThickness="1" StrokeLineJoin="Round" Stretch="Fill" Data="F1M0.009766,1.453125C0.291016,0.09375,1.509766,0,1.509766,0L6.509766,0C6.509766,0,7.728516,0,8.009766,1.5L8.009766,11.5 4.98877,15.200195C4.197266,15.854492,3.384766,15.166992,3.384766,15.166992L0.009766,11.5C0.009766,11.5,-0.012207,1.560059,0.009766,1.453125z" IsHitTestVisible="False" Opacity="0" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsFocused" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
              </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="DisabledVisualElement" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Slider}" TargetType="{x:Type Slider}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Slider}">
          <Grid Name="GridRoot">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" MinHeight="{TemplateBinding FrameworkElement.MinHeight}" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TickBar Name="TopTick" Visibility="Collapsed" Height="4" SnapsToDevicePixels="True" Placement="Top" Fill="#FF405A78" />
            <Rectangle Margin="5.5,0,5.5,0" Grid.Column="0" Grid.ColumnSpan="3" Height="6" RadiusX="3" RadiusY="3">
              <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                  <GradientStop Color="#FFB0B0B0" Offset="0.341" />
                  <GradientStop Color="#FFE7EAEA" Offset="0.346" />
                </LinearGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
            <Track Name="PART_Track">
              <Track.Thumb>
                <Thumb Style="{DynamicResource NuclearSliderThumb}" />
              </Track.Thumb>
              <Track.IncreaseRepeatButton>
                <RepeatButton Style="{DynamicResource NuclearScrollRepeatButtonStyle}" Command="Slider.IncreaseLarge" />
              </Track.IncreaseRepeatButton>
              <Track.DecreaseRepeatButton>
                <RepeatButton Style="{DynamicResource NuclearScrollRepeatButtonStyle}" Command="Slider.DecreaseLarge" />
              </Track.DecreaseRepeatButton>
            </Track>
            <TickBar Name="BottomTick" Visibility="Collapsed" Grid.Row="2" Height="4" SnapsToDevicePixels="True" Placement="Bottom" Fill="{TemplateBinding Control.Foreground}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="Slider.TickPlacement" Value="TopLeft">
              <Setter TargetName="TopTick" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="Slider.TickPlacement" Value="BottomRight">
              <Setter TargetName="BottomTick" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="Slider.TickPlacement" Value="Both">
              <Setter TargetName="TopTick" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="BottomTick" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False" />
            <Trigger Property="Slider.Orientation" Value="Vertical">
              <Setter TargetName="GridRoot" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform Angle="-90" />
                </Setter.Value>
              </Setter>
              <Setter TargetName="PART_Track" Property="Track.Orientation" Value="Horizontal" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type TreeView}" TargetType="{x:Type TreeView}">
    <Setter Property="Control.Background" Value="#FFFFFFFF" />
    <Setter Property="Control.Foreground" Value="{StaticResource OutsideFontColor}" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
    <Setter Property="Control.VerticalContentAlignment" Value="Top" />
    <Setter Property="Control.BorderBrush" Value="{StaticResource btnPressStroke2}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Padding" Value="4" />
    <Setter Property="FrameworkElement.Cursor" Value="Arrow" />
    <Setter Property="Control.Foreground" Value="{StaticResource OutsideFontColor}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeView}">
          <Grid>
            <Border Name="Border" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2">
              <ScrollViewer Focusable="False" Background="{TemplateBinding Control.Background}" Padding="4" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="False">
                <ItemsPresenter />
              </ScrollViewer>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="NuclearTreeViewItemToggleButton" TargetType="{x:Type ToggleButton}">
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="(Shape.Fill)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource treeviewArrowHover}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="UncheckedVisual" Storyboard.TargetProperty="(Shape.Fill)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource treeviewArrowHover}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="(Shape.Fill)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource treeviewArrowChecked}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="UncheckedVisual" Storyboard.TargetProperty="(Shape.Fill)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource treeviewArrowUnchecked}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="CheckedOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="UncheckedVisual" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
            <Storyboard x:Key="CheckedOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="UncheckedVisual" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid HorizontalAlignment="Right" Margin="2,2,5,2">
            <Path Name="UncheckedVisual" Height="9" Width="6" HorizontalAlignment="Right" VerticalAlignment="Center" Fill="{StaticResource treeviewArrowUnchecked}" StrokeLineJoin="Miter" Data="M0,0L0,9 5,4.5z" />
            <Path Name="CheckedVisual" Height="6" Width="6" HorizontalAlignment="Right" VerticalAlignment="Center" Fill="{StaticResource treeviewArrowChecked}" StrokeLineJoin="Miter" Opacity="0" Data="M6,0L6,6 0,6z" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource CheckedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource CheckedOn}" />
              </Trigger.EnterActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
    <Setter Property="Control.VerticalContentAlignment" Value="Top" />
    <Setter Property="Control.Padding" Value="5,3,15,3" />
    <Setter Property="FrameworkElement.Cursor" Value="Arrow" />
    <Setter Property="Control.Foreground" Value="{StaticResource OutsideFontColor}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeViewItem}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="SelectedOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="select_gradient" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="select_highlight" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
            <Storyboard x:Key="SelectedOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="select_gradient" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="select_highlight" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
            <Storyboard x:Key="HoverOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="hover_gradient" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.65" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="hover_gradient" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition MinWidth="19" Width="Auto" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition />
            </Grid.RowDefinitions>
            <ToggleButton Name="Expander" Style="{DynamicResource NuclearTreeViewItemToggleButton}" ClickMode="Press" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
            <Rectangle Name="select_gradient" Grid.Column="1" Fill="{StaticResource BtnOverFill}" Stroke="{StaticResource selectedStroke}" StrokeThickness="1" RadiusX="2" RadiusY="2" Opacity="0" IsHitTestVisible="False" />
            <Rectangle Name="select_highlight" Margin="1" Grid.Column="1" Stroke="#A0FFFFFF" Opacity="0" />
            <Rectangle Name="inactive" Grid.Column="1" Fill="#FF999999" Stroke="#FF333333" StrokeThickness="1" RadiusX="2" RadiusY="2" Opacity="0" IsHitTestVisible="False" />
            <Rectangle Name="hover_gradient" Grid.Column="1" Fill="{StaticResource hoverGradient}" Stroke="{StaticResource hoverStroke}" StrokeThickness="1" RadiusX="2" RadiusY="2" Opacity="0" IsHitTestVisible="False" />
            <Rectangle Name="highlight" Grid.Column="1" Margin="1" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" IsHitTestVisible="False" Stroke="#FFFFFFFF" />
            <ContentPresenter Name="PART_Header" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" ContentSource="Header" Grid.Column="1" Margin="{TemplateBinding Control.Padding}" />
            <ItemsPresenter Name="ItemsHost" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger SourceName="PART_Header" Property="UIElement.IsMouseOver" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="TreeViewItem.IsExpanded" Value="False">
              <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ItemsControl.HasItems" Value="False">
              <Setter TargetName="Expander" Property="UIElement.Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="TreeViewItem.IsSelected" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource SelectedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource SelectedOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TreeViewItem.IsSelected" Value="True" />
                <Condition Property="TreeViewItem.IsSelectionActive" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Control.Foreground" />
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="{x:Type Button}" BasedOn="{x:Null}">
    <Setter Property="Control.Foreground" Value="{StaticResource ButtonFontColor}" />
    <Setter Property="Control.FontSize" Value="10" />
    <Setter Property="FrameworkElement.MinHeight" Value="18" />
    <Setter Property="FrameworkElement.MinWidth" Value="50" />
    <Setter Property="Control.Padding" Value="3" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
    <Setter Property="Control.Template" Value="{DynamicResource ButtonTemplate}" />
  </Style>
  <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}" TargetType="{x:Type CheckBox}">
    <Setter Property="Control.FontSize" Value="10" />
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />
    <Setter Property="Control.Foreground" Value="{StaticResource OutsideFontColor}" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
    <Setter Property="Control.VerticalContentAlignment" Value="Top" />
    <Setter Property="Control.Padding" Value="4,1,0,0" />
    <Setter Property="Control.Template" Value="{DynamicResource CheckBoxTemplate}" />
  </Style>
  <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}" TargetType="{x:Type RadioButton}">
    <Setter Property="Control.FontSize" Value="10" />
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{DynamicResource RadioButtonFocusVisual}" />
    <Setter Property="Control.Foreground" Value="{StaticResource OutsideFontColor}" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
    <Setter Property="Control.VerticalContentAlignment" Value="Top" />
    <Setter Property="Control.Padding" Value="4,1,0,0" />
    <Setter Property="Control.Template" Value="{DynamicResource RadioButtonTemplate}" />
  </Style>
  <Style x:Key="{x:Static ToolBar.ComboBoxStyleKey}" TargetType="{x:Type ComboBox}">
    <Setter Property="Control.FontSize" Value="10" />
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="Control.Foreground" Value="{StaticResource OutsideFontColor}" />
    <Setter Property="Control.Template" Value="{DynamicResource ComboBoxTemplate}" />
  </Style>
  <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}" TargetType="{x:Type TextBox}">
    <Setter Property="Control.FontSize" Value="10" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="UIElement.AllowDrop" Value="True" />
    <Setter Property="Control.Background" Value="#FFFFFFFF" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Control.VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Control.Padding" Value="4" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Template" Value="{DynamicResource TextBoxTemplate}" />
  </Style>
  <LinearGradientBrush x:Key="ToolBarHorizontalBackground" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FFFFFF" Offset="0" />
    <GradientStop Color="#FFFBFF" Offset="0.5" />
    <GradientStop Color="#F7F7F7" Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ToolBarToggleButtonHorizontalBackground" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#ECECEC" Offset="0" />
    <GradientStop Color="#DDDDDD" Offset="0.5" />
    <GradientStop Color="#A0A0A0" Offset="1" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ToolBarButtonHover" Color="#FF818181" />
  <SolidColorBrush x:Key="ToolBarGripper" Color="#C6C3C6" />
  <Style x:Key="ToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Background" Value="{StaticResource ToolBarToggleButtonHorizontalBackground}" />
    <Setter Property="FrameworkElement.MinHeight" Value="0" />
    <Setter Property="FrameworkElement.MinWidth" Value="0" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver_Highlight" Storyboard.TargetProperty="Opacity" To="0.65" />
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundOver_Highlight" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
            <Storyboard x:Key="PressedOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity" To="0.84" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgoundPressed_Highlight" Storyboard.TargetProperty="Opacity" To="0.65" />
            </Storyboard>
            <Storyboard x:Key="PressedOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgoundPressed_Highlight" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Border Name="Bd" SnapsToDevicePixels="True" CornerRadius="0,0,0,0">
            <Grid>
              <Border Name="BackgroundNorm" Background="{StaticResource grayGradient}" BorderThickness="1" BorderBrush="#FF8E8F8F" CornerRadius="0,3,3,0" />
              <Border Name="BackgroundNorm_highlight" Margin="1" BorderBrush="#F2FFFFFF" BorderThickness="1,0,1,1" CornerRadius="0,3,3,0" Opacity="0.65" />
              <Border Name="BackgroundOver" Background="{StaticResource BtnOverFill}" BorderBrush="{StaticResource TextBoxPressBrush}" BorderThickness="1" CornerRadius="0,3,3,0" Opacity="0" />
              <Border Name="BackgroundOver_Highlight" Margin="1" Background="{StaticResource btnOverFillHighlight}" BorderBrush="{StaticResource hoverStroke}" BorderThickness="1,0,1,1" CornerRadius="0,3,3,0" Opacity="0" />
              <Border Name="BackgroundPressed" Background="{StaticResource BtnPressFill}" BorderBrush="{StaticResource btnPressBorder}" BorderThickness="1" CornerRadius="0,3,3,0" Opacity="0" />
              <Border Name="BackgoundPressed_Highlight" Background="{StaticResource btnPressFillHighlight}" Margin="1" CornerRadius="0,3,3,0" Opacity="0" />
              <Border Name="Background_overlay" Margin="1,1,1,0" BorderThickness="1" CornerRadius="0,3,3,0">
                <Border.Background>
                  <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#00FFFFFF" Offset="0" />
                    <GradientStop Color="#72FFFFFF" Offset="0.157" />
                    <GradientStop Color="#72FFFFFF" Offset="0.5" />
                    <GradientStop Color="#00FFFFFF" Offset="0.51" />
                  </LinearGradientBrush>
                </Border.Background>
              </Border>
              <Canvas SnapsToDevicePixels="True" HorizontalAlignment="Right" Margin="7,2,2,2" VerticalAlignment="Bottom" Width="6" Height="7">
                <Path Stroke="#FFFFFFFF" Data="M1,1.5L6,1.5" />
                <Path Stroke="{TemplateBinding Control.Foreground}" Data="M0,0.5L5,0.5" />
                <Path Fill="#FFFFFFFF" Data="M0.5,4L6.5,4 3.5,7z" />
                <Path Fill="{TemplateBinding Control.Foreground}" Data="M-0.5,3L5.5,3 2.5,6z" />
              </Canvas>
              <Border Name="FocusVisualElement" Margin="1" BorderBrush="{StaticResource btnFocus}" BorderThickness="1" CornerRadius="2" IsHitTestVisible="False" Opacity="0" />
              <Border Name="DisabledVisualElement" Background="#FFF1F1F1" BorderBrush="#FFB2B2B2" BorderThickness="1" CornerRadius="3" IsHitTestVisible="False" Opacity="0" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource PressedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource PressedOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="True" />
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{StaticResource ToolBarGripper}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="ToolBarSubMenuBackground" Color="#FFFDFDFD" />
  <SolidColorBrush x:Key="ToolBarMenuBorder" Color="#FFFFFFFF" />
  <Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border SnapsToDevicePixels="True" Background="#00FFFFFF" Padding="{TemplateBinding Control.Padding}" CornerRadius="0,0,0,0">
            <Rectangle>
              <Rectangle.Fill>
                <DrawingBrush TileMode="Tile" Viewbox="0,0,4,4" ViewboxUnits="Absolute" Viewport="0,0,4,4" ViewportUnits="Absolute">
                  <DrawingBrush.Drawing>
                    <DrawingGroup>
                      <GeometryDrawing Brush="#FFFFFFFF" Geometry="M1,1L1,3 3,3 3,1z" />
                      <GeometryDrawing Brush="{StaticResource ToolBarGripper}" Geometry="M0,0L0,2 2,2 2,0z" />
                    </DrawingGroup>
                  </DrawingBrush.Drawing>
                </DrawingBrush>
              </Rectangle.Fill>
            </Rectangle>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter Property="FrameworkElement.Cursor" Value="SizeAll" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="ToolBarToggleButtonVerticalBackground" EndPoint="1,0" StartPoint="0,0">
    <GradientStop Color="#ECECEC" Offset="0" />
    <GradientStop Color="#DDDDDD" Offset="0.5" />
    <GradientStop Color="#A0A0A0" Offset="1" />
  </LinearGradientBrush>
  <Style x:Key="ToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Background" Value="{StaticResource ToolBarToggleButtonVerticalBackground}" />
    <Setter Property="FrameworkElement.MinHeight" Value="0" />
    <Setter Property="FrameworkElement.MinWidth" Value="0" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Name="Bd" SnapsToDevicePixels="True" Background="{TemplateBinding Control.Background}" CornerRadius="0,0,3,3">
            <Canvas SnapsToDevicePixels="True" HorizontalAlignment="Right" Margin="2,7,2,2" VerticalAlignment="Bottom" Width="7" Height="6">
              <Path Stroke="#FFFFFFFF" Data="M1.5,1L1.5,6" />
              <Path Stroke="{TemplateBinding Control.Foreground}" Data="M0.5,0L0.5,5" />
              <Path Fill="#FFFFFFFF" Data="M3.5,0.5L7,3.5 4,6.5z" />
              <Path Fill="{TemplateBinding Control.Foreground}" Data="M3,-0.5L6,2.5 3,5.5z" />
            </Canvas>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Bd" Value="{StaticResource ToolBarButtonHover}" Property="Border.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
              <Setter TargetName="Bd" Value="{StaticResource ToolBarButtonHover}" Property="Border.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{StaticResource ToolBarGripper}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="ToolBarVerticalBackground" EndPoint="1,0" StartPoint="0,0">
    <GradientStop Color="#FFFFFF" Offset="0" />
    <GradientStop Color="#FFFBFF" Offset="0.5" />
    <GradientStop Color="#F7F7F7" Offset="1" />
  </LinearGradientBrush>
  <Style x:Key="{x:Type ToolBar}" TargetType="{x:Type ToolBar}">
    <Setter Property="Control.Background" Value="{StaticResource ToolBarHorizontalBackground}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToolBar}">
          <Grid Name="Grid" SnapsToDevicePixels="True" Margin="3,1,1,1">
            <Grid Name="OverflowGrid" HorizontalAlignment="Right" Margin="0,0,-3,0">
              <ToggleButton Name="OverflowButton" IsEnabled="{TemplateBinding ToolBar.HasOverflowItems}" Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}" ClickMode="Press" FocusVisualStyle="{x:Null}" IsChecked="{Binding Path=IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
              <Popup Name="OverflowPopup" Focusable="False" AllowsTransparency="True" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" StaysOpen="False" IsOpen="{Binding Path=IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}">
                <Border Name="Shdw" Background="#FFFFFFFF" BorderBrush="{StaticResource TextBoxNorm}" BorderThickness="1" CornerRadius="1,1,3,3">
                  <Border BorderThickness="1,1,1,1">
                    <ToolBarOverflowPanel Name="PART_ToolBarOverflowPanel" Focusable="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Margin="2" WrapWidth="200" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle" FocusVisualStyle="{x:Null}" />
                  </Border>
                </Border>
              </Popup>
            </Grid>
            <Border Name="MainPanelBorder" Margin="0,0,11,0" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="0,0,0,0" Padding="{TemplateBinding Control.Padding}">
              <Grid>
                <Border Name="BackgroundNorm" Background="{StaticResource grayGradient}" BorderThickness="1" BorderBrush="#FF8E8F8F" />
                <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                  <Thumb Name="ToolBarThumb" Padding="6,5,1,6" Margin="-3,-1,0,0" Style="{StaticResource ToolBarThumbStyle}" Width="10" />
                  <ContentPresenter Name="ToolBarHeader" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" HorizontalAlignment="Center" Margin="4,0,4,0" VerticalAlignment="Center" ContentSource="Header" />
                  <Grid>
                    <Border Name="BackgroundNorm1" Background="{StaticResource grayGradient}" BorderThickness="0,1,0,1" BorderBrush="#FF8E8F8F" />
                    <ToolBarPanel Name="PART_ToolBarPanel" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Margin="0,1,2,2" IsItemsHost="True" />
                  </Grid>
                </DockPanel>
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ToolBar.IsOverflowOpen" Value="True">
              <Setter TargetName="ToolBarThumb" Property="UIElement.IsEnabled" Value="False" />
            </Trigger>
            <Trigger Value="{x:Null}" Property="HeaderedItemsControl.Header">
              <Setter TargetName="ToolBarHeader" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ToolBarTray.IsLocked" Value="True">
              <Setter TargetName="ToolBarThumb" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger SourceName="OverflowPopup" Property="Popup.HasDropShadow" Value="True">
              <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5" />
              <Setter TargetName="Shdw" Property="UIElement.SnapsToDevicePixels" Value="True" />
              <Setter TargetName="Shdw" Property="Border.Background" Value="#71000000" />
            </Trigger>
            <Trigger Property="ToolBar.Orientation" Value="Vertical">
              <Setter TargetName="Grid" Property="FrameworkElement.Margin" Value="1,3,1,1" />
              <Setter TargetName="OverflowButton" Value="{StaticResource ToolBarVerticalOverflowButtonStyle}" Property="FrameworkElement.Style" />
              <Setter TargetName="ToolBarThumb" Property="FrameworkElement.Height" Value="10" />
              <Setter TargetName="ToolBarThumb" Property="FrameworkElement.Width" Value="Auto" />
              <Setter TargetName="ToolBarThumb" Property="FrameworkElement.Margin" Value="-1,-3,0,0" />
              <Setter TargetName="ToolBarThumb" Property="Control.Padding" Value="5,6,6,1" />
              <Setter TargetName="ToolBarHeader" Property="FrameworkElement.Margin" Value="0,0,0,4" />
              <Setter TargetName="PART_ToolBarPanel" Property="FrameworkElement.Margin" Value="1,0,2,2" />
              <Setter TargetName="ToolBarThumb" Property="DockPanel.Dock" Value="Top" />
              <Setter TargetName="ToolBarHeader" Property="DockPanel.Dock" Value="Top" />
              <Setter TargetName="OverflowGrid" Property="FrameworkElement.HorizontalAlignment" Value="Stretch" />
              <Setter TargetName="OverflowGrid" Property="FrameworkElement.VerticalAlignment" Value="Bottom" />
              <Setter TargetName="OverflowPopup" Property="Popup.Placement" Value="Right" />
              <Setter TargetName="MainPanelBorder" Property="FrameworkElement.Margin" Value="0,0,0,11" />
              <Setter Value="{StaticResource ToolBarVerticalBackground}" Property="Control.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Foreground" Value="#FF000000" />
  </Style>
  <BorderGapMaskConverter x:Key="BorderGapMaskConverter" />
  <Style x:Key="{x:Type GroupBox}" TargetType="{x:Type GroupBox}">
    <Setter Property="Control.BorderBrush" Value="#FFD5DFE5" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Foreground" Value="{StaticResource OutsideFontColor}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GroupBox}">
          <Grid SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="6" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="6" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
              <RowDefinition Height="6" />
            </Grid.RowDefinitions>
            <Border Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" BorderThickness="1,1,1,1" CornerRadius="4">
              <Border.OpacityMask>
                <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                  <Binding Path="ActualWidth" ElementName="Header" />
                  <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                  <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                </MultiBinding>
              </Border.OpacityMask>
            </Border>
            <Border Name="ContentBorder" Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" Background="#FFFFFFFF" BorderBrush="{StaticResource TextBoxNorm}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="3" />
            <Border Name="BackgroundNorm" Background="{StaticResource grayGradient}" BorderThickness="1" BorderBrush="#FF8E8F8F" CornerRadius="3,3,0,0" Grid.ColumnSpan="4" Grid.RowSpan="2" />
            <Border Name="Header" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Padding="3,1,3,0">
              <ContentPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" ContentSource="Header" RecognizesAccessKey="True" Margin="0,4,0,4" />
            </Border>
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Margin="{TemplateBinding Control.Padding}" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="2" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Foreground" Value="{DynamicResource OutsideFontColor}" />
  </Style>
  <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}">
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid SnapsToDevicePixels="True" Background="{TemplateBinding Control.Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <DockPanel Margin="{TemplateBinding Control.Padding}">
              <ScrollViewer Focusable="False" DockPanel.Dock="Top" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Hidden">
                <GridViewHeaderRowPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Margin="2,0,2,0" AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}">
                  <GridViewHeaderRowPresenter.Columns>
                    <Binding Path="TemplatedParent.View.Columns" RelativeSource="{RelativeSource TemplatedParent}" />
                  </GridViewHeaderRowPresenter.Columns>
                </GridViewHeaderRowPresenter>
              </ScrollViewer>
              <ScrollContentPresenter Name="PART_ScrollContentPresenter" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" KeyboardNavigation.DirectionalNavigation="Local" />
            </DockPanel>
            <ScrollBar Name="PART_HorizontalScrollBar" Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" Cursor="Arrow" Grid.Row="1" Orientation="Horizontal" ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}" Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" Minimum="0.0" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            <ScrollBar Name="PART_VerticalScrollBar" Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" Cursor="Arrow" Grid.Column="1" Orientation="Vertical" ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}" Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" Minimum="0.0" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            <DockPanel Grid.Column="1" Grid.Row="1" LastChildFill="False" Background="{Binding Path=Background, ElementName=PART_VerticalScrollBar}">
              <Rectangle Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" Width="1" Fill="#FFFFFFFF" DockPanel.Dock="Left" />
              <Rectangle Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" Height="1" Fill="#FFFFFFFF" DockPanel.Dock="Top" />
            </DockPanel>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ListView}" TargetType="{x:Type ListView}">
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Foreground" Value="{StaticResource OutsideFontColor}" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.BorderBrush" Value="{StaticResource btnPressStroke2}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Padding" Value="1" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <Border BorderThickness="{TemplateBinding Control.BorderThickness}" Background="#FFFFFFFF" BorderBrush="{TemplateBinding Control.BorderBrush}" CornerRadius="2">
            <ScrollViewer Padding="{TemplateBinding Control.Padding}" Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ItemsControl.IsGrouping" Value="True">
              <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False" />
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ListViewItemFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Stroke="#8E6EA6F5" StrokeThickness="1" RadiusX="2" RadiusY="2" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ListViewItem}" TargetType="{x:Type ListViewItem}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ListViewItemFocusVisual}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="FrameworkElement.Margin" Value="0,0,0,1" />
    <Setter Property="Control.Padding" Value="5,2,5,2" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Foreground" Value="{StaticResource OutsideFontColor}" />
    <Setter Property="Control.Padding" Value="3" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientOver" Storyboard.TargetProperty="Opacity" To="0.73" />
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundGradientOver" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
            <Storyboard x:Key="SelectedOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientSelected" Storyboard.TargetProperty="Opacity" To="0.84" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientSelectedDisabled" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
            <Storyboard x:Key="SelectedOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundGradientSelected" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundGradientSelectedDisabled" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
          </ControlTemplate.Resources>
          <Border Name="border" SnapsToDevicePixels="True" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2">
            <Grid Margin="2,0,2,0">
              <Rectangle Name="BackgroundGradientOver" Fill="{StaticResource hoverGradient}" Stroke="{StaticResource hoverStroke}" RadiusX="2" RadiusY="2" Opacity="0" />
              <Rectangle Name="BackgroundGradientSelectedDisabled" Fill="{StaticResource grayGradient}" Stroke="#7F8E8F8F" RadiusX="2" RadiusY="2" Opacity="0" />
              <Rectangle Name="BackgroundGradientSelected" Fill="{StaticResource BtnOverFill}" Stroke="{StaticResource selectedStroke}" RadiusX="2" RadiusY="2" Opacity="0" />
              <Rectangle Name="BackgroundHighlight" Margin="1" Stroke="#A0FFFFFF" RadiusX="1" RadiusY="1" />
              <GridViewRowPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Margin="0,2,0,2" VerticalAlignment="Stretch" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="ListBoxItem.IsSelected" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Name="SelectedOn_BeginStoryboard" Storyboard="{StaticResource SelectedOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground" />
              <Setter TargetName="BackgroundGradientSelected" Property="UIElement.Visibility" Value="Hidden" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ListBoxItem.IsSelected" Value="True" />
                <Condition Property="Selector.IsSelectionActive" Value="False" />
              </MultiTrigger.Conditions>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
    <Setter Property="Canvas.Right" Value="-8.5" />
    <Setter Property="FrameworkElement.Width" Value="18" />
    <Setter Property="FrameworkElement.Height" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}}" />
    <Setter Property="Control.Padding" Value="0,3,0,4" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Padding="{TemplateBinding Control.Padding}" Background="#00FFFFFF">
            <Rectangle HorizontalAlignment="Center" Width="0.5">
              <Rectangle.Fill>
                <SolidColorBrush Color="{DynamicResource WhiteColor}" />
              </Rectangle.Fill>
            </Rectangle>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type GridViewColumnHeader}" TargetType="{x:Type GridViewColumnHeader}">
    <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Padding" Value="2,0,2,0" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver_Highlight" Storyboard.TargetProperty="Opacity" To="0.65" />
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundOver_Highlight" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
            <Storyboard x:Key="PressedOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity" To="0.84" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgoundPressed_Highlight" Storyboard.TargetProperty="Opacity" To="0.65" />
            </Storyboard>
            <Storyboard x:Key="PressedOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgoundPressed_Highlight" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid Margin="0,1,0,1">
            <Grid>
              <Border Name="BackgroundNorm" Background="{StaticResource grayGradient}" BorderThickness="1" BorderBrush="#FF8E8F8F" />
              <Border Name="BackgroundNorm_highlight" Margin="1" BorderBrush="#F2FFFFFF" BorderThickness="1,0,1,1" Opacity="0.65" />
              <Border Name="BackgroundOver" Background="{StaticResource BtnOverFill}" BorderBrush="{StaticResource TextBoxPressBrush}" BorderThickness="1" Opacity="0" />
              <Border Name="BackgroundOver_Highlight" Margin="1" Background="{StaticResource btnOverFillHighlight}" BorderBrush="{StaticResource hoverStroke}" BorderThickness="1,0,1,1" Opacity="0" />
              <Border Name="BackgroundPressed" Background="{StaticResource BtnPressFill}" BorderBrush="{StaticResource btnPressBorder}" BorderThickness="1" Opacity="0" />
              <Border Name="BackgoundPressed_Highlight" Background="{StaticResource btnPressFillHighlight}" Margin="1" Opacity="0" />
              <Border Name="Background_overlay" Margin="1,1,1,0" BorderThickness="1">
                <Border.Background>
                  <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#00FFFFFF" Offset="0" />
                    <GradientStop Color="#72FFFFFF" Offset="0.157" />
                    <GradientStop Color="#72FFFFFF" Offset="0.5" />
                    <GradientStop Color="#00FFFFFF" Offset="0.51" />
                  </LinearGradientBrush>
                </Border.Background>
              </Border>
              <ContentPresenter VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" Margin="2,2,2,2" />
              <Border Name="DisabledVisualElement" Background="#FFF1F1F1" BorderBrush="#FFB2B2B2" BorderThickness="1" CornerRadius="3" IsHitTestVisible="False" Opacity="0" />
            </Grid>
            <Canvas>
              <Thumb Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripper}" HorizontalAlignment="Stretch" />
            </Canvas>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
              </Trigger.EnterActions>
              <Setter TargetName="PART_HeaderGripper" Property="Control.Background" Value="#00FFFFFF" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
              </Trigger.EnterActions>
              <Setter TargetName="PART_HeaderGripper" Property="UIElement.Visibility" Value="Hidden" />
              <Setter Property="Control.Background" Value="#FF87CEEB" />
            </Trigger>
            <Trigger Property="FrameworkElement.Height" Value="Auto">
              <Setter Property="FrameworkElement.MinHeight" Value="20" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
              <Setter TargetName="DisabledVisualElement" Property="UIElement.Opacity" Value="0.4" />
            </Trigger>
            <Trigger Property="GridViewColumnHeader.Role" Value="Padding">
              <Setter TargetName="PART_HeaderGripper" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="GridViewColumnHeader.Role" Value="Floating">
              <Setter TargetName="PART_HeaderGripper" Property="UIElement.Visibility" Value="Collapsed" />
              <Setter Property="Control.Background" Value="#FFFFFF00" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ToggleButton}" TargetType="{x:Type ToggleButton}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource NuclearButtonFocusVisual}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Foreground" Value="{DynamicResource OutsideFontColor}" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Padding" Value="1" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver_Highlight" Storyboard.TargetProperty="Opacity" To="0.65" />
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundOver_Highlight" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
            <Storyboard x:Key="CheckedOn">
              <Storyboard>
                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundChecked" Storyboard.TargetProperty="Opacity" To="1" />
                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgoundChecked_Highlight" Storyboard.TargetProperty="Opacity" To="1" />
              </Storyboard>
            </Storyboard>
            <Storyboard x:Key="CheckedOff">
              <Storyboard>
                <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundChecked" Storyboard.TargetProperty="Opacity" To="0" />
                <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgoundChecked_Highlight" Storyboard.TargetProperty="Opacity" To="0" />
              </Storyboard>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
              <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="0" Storyboard.TargetName="BackgoundPressed_Highlight" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
            <Storyboard x:Key="PressedOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgoundPressed_Highlight" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid Name="grid1">
            <Border Name="BackgroundNorm" Background="{StaticResource grayGradient}" BorderThickness="1" BorderBrush="#FF8E8F8F" CornerRadius="3" />
            <Border Name="BackgroundNorm_highlight" Margin="1" BorderBrush="#F2FFFFFF" BorderThickness="1,0,1,1" CornerRadius="3" Opacity="0.65" />
            <Border Name="BackgroundChecked" Background="{StaticResource BtnPressFill}" BorderBrush="{StaticResource btnPressBorder}" BorderThickness="1" CornerRadius="3" Opacity="0" />
            <Border Name="BackgoundChecked_Highlight" Background="{StaticResource btnPressFillHighlight}" Margin="1" CornerRadius="2.5" Opacity="0" />
            <Border Name="BackgroundOver" Background="{StaticResource BtnOverFill}" BorderBrush="{StaticResource TextBoxPressBrush}" BorderThickness="1" CornerRadius="3" Opacity="0" />
            <Border Name="BackgroundOver_Highlight" Margin="1" Background="{StaticResource btnOverFillHighlight}" BorderBrush="{StaticResource hoverStroke}" BorderThickness="1,0,1,1" CornerRadius="3" Opacity="0" />
            <Border Name="BackgroundPressed" Background="{StaticResource BtnPressFill}" BorderBrush="{StaticResource btnPressBorder}" BorderThickness="1" CornerRadius="3" Opacity="0" />
            <Border Name="BackgoundPressed_Highlight" Background="{StaticResource btnPressFillHighlight}" Margin="1" CornerRadius="2.5" Opacity="0" />
            <Border Name="Background_overlay" Margin="1,0,1,0" BorderThickness="1" CornerRadius="3,3,0,0">
              <Border.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                  <GradientStop Color="#00FFFFFF" Offset="0" />
                  <GradientStop Color="#72FFFFFF" Offset="0.157" />
                  <GradientStop Color="#72FFFFFF" Offset="0.5" />
                  <GradientStop Color="#00FFFFFF" Offset="0.51" />
                </LinearGradientBrush>
              </Border.Background>
            </Border>
            <Border Name="DisabledVisualElement" Background="#FFF1F1F1" BorderBrush="#FFB2B2B2" BorderThickness="1" CornerRadius="3" IsHitTestVisible="False" Visibility="Collapsed" />
            <ContentPresenter Name="contentPresenter" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" />
            <TextBlock Name="DisabledOverlay" Panel.ZIndex="1" Text="{TemplateBinding ContentControl.Content}" TextBlock.Foreground="#FF8E96A2" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="{TemplateBinding Control.Padding}" Visibility="Collapsed" />
            <Border Name="FocusVisualElement" Margin="1" BorderBrush="{StaticResource btnFocus}" BorderThickness="1" CornerRadius="2" IsHitTestVisible="False" Visibility="Collapsed" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource PressedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource PressedOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="True" />
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource CheckedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource CheckedOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Property="Control.Foreground" Value="#FFADADAD" />
              <Setter TargetName="DisabledVisualElement" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="DisabledOverlay" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="contentPresenter" Property="UIElement.Visibility" Value="Collapsed" />
              <Setter TargetName="DisabledVisualElement" Property="UIElement.Opacity" Value="1" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
    <Setter Property="Control.Foreground" Value="#FF525552" />
    <Setter Property="Control.Padding" Value="3,0,3,0" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToolTip}">
          <Border Name="Root">
            <Border BorderBrush="#FF737573" BorderThickness="1" CornerRadius="2" Padding="4">
              <Border.Resources>
                <Storyboard x:Key="Visible State" />
                <Storyboard x:Key="Normal State" />
              </Border.Resources>
              <Border.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                  <GradientStop Color="#FFFFFFFF" Offset="0" />
                  <GradientStop Color="#FFE7E7F7" Offset="1" />
                </LinearGradientBrush>
              </Border.Background>
              <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Cursor="{TemplateBinding FrameworkElement.Cursor}" Margin="{TemplateBinding Control.Padding}" />
            </Border>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>